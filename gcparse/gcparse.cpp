#include <stdio.h>
#include <stdint.h>
#include <memory>
#include <vector>
//uint8_t* gc_buf;
uint8_t gc_buf[27913 + 4];

uint16_t ax;
uint16_t bx;
uint16_t cx;
uint16_t dx;

bool carry = false;

uint8_t* ax8 = (uint8_t*) & ax;
uint8_t* ah = ax8 + 1;
uint8_t* al = ax8;

uint8_t* cx8 = (uint8_t*)&cx;
uint8_t* ch = cx8 + 1;
uint8_t* cl = cx8;


uint16_t si = 0u;
uint16_t di = 0u;
std::vector<uint16_t> stack;

uint8_t ss[0xFFFF];
uint8_t es[4096];

uint8_t cs0C05 = 0x0028;
uint8_t cs0C03 = 0x0050;

uint16_t* ssA81C = (uint16_t*)(ss + 0xA81C);
uint16_t* ssA81A = (uint16_t*)(ss + 0xA81A);
uint16_t* ssA812 = (uint16_t*)(ss + 0xA812);
uint16_t* ssA80E = (uint16_t*)(ss + 0xA80E);
uint16_t* ssA80C = (uint16_t*)(ss + 0xA80C);
uint16_t* ssA80A = (uint16_t*)(ss + 0xA80A);
uint16_t* ssA806 = (uint16_t*)(ss + 0xA806);
uint16_t* ssA804 = (uint16_t*)(ss + 0xA804);
uint16_t* ssA803 = (uint16_t*)(ss + 0xA803);

void parse_gc();
void parse_header();
void copy_palette();
void parse_chunk_header();
void read_gc_start();
void read_gc_chunk();

const int NO_ACTION = 0;
const int CONTROLWORD_ACTION = 1;
const int COUNTER_ACTION = 2;
int handlecontrolword(uint16_t* controlword, uint16_t* counter);

bool handlerepetitions(uint16_t* repetitions);

void function0000100E();
void function000010C2();

int main()
{
	memset(es, 0xBB, sizeof(es));
	FILE* gc = fopen("pic3_3.gc", "rb+");
	if (gc)
	{
		fseek(gc, 0, SEEK_END);
		int size = ftell(gc);
		rewind(gc);

		//gc_buf = new uint8_t[size];
		fread(gc_buf + 4, 1, size, gc);
		fclose(gc);
	}
	parse_gc();

	return 0;
}

void parse_gc()
{
	parse_header();
	copy_palette();
	parse_chunk_header();
	read_gc_start();
	read_gc_chunk();
}

void parse_header()
{
	/*
0FB7:00000D07  cmp  word [si],4347             ds:[0004]=4347         EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 A:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
0FB7:00000D0B  je   00000D10 ($+3)             (down)                 EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D10  cmp  byte [si+02],00            ds:[0006]=0200         EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D14  je   00000D19 ($+3)             (down)                 EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D19  cmp  byte [si+03],02            ds:[0007]=8002         EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D1D  je   00000D22 ($+3)             (down)                 EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D22  test byte [si+04],80            ds:[0008]=0080         EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D26  je   00000D51 ($+29)            (no jmp)               EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
0FB7:00000D28  cmp  byte ss:[5E11],00          ss:[5E11]=0000         EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
0FB7:00000D2E  jne  00000D51 ($+21)            (no jmp)               EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	*/
}

void copy_palette()
{
	/*
0FB7:00000D30  push si                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D31  push es                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A828 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D32  push di                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A826 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D33  push cx                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A824 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D34  add  si,0010                                           EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A822 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D37  push si                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00000003 EBP:0000A832 ESP:0000A822 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D38  mov  di,5846                                           EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00000003 EBP:0000A832 ESP:0000A820 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D3B  push ss                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00005846 EBP:0000A832 ESP:0000A820 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D3C  pop  es                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00005846 EBP:0000A832 ESP:0000A81E DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D3D  mov  cx,0010                                           EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00005846 EBP:0000A832 ESP:0000A820 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D40  repe movsw                                             EAX:00000000 EBX:00000001 ECX:00000010 EDX:0000582F ESI:00000014 EDI:00005846 EBP:0000A832 ESP:0000A820 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D42  pop  si                                                EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000034 EDI:00005866 EBP:0000A832 ESP:0000A820 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D43  test bl,01                                             EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000014 EDI:00005866 EBP:0000A832 ESP:0000A822 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
0FB7:00000D46  jne  00000D4D ($+5)             (down)                 EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000014 EDI:00005866 EBP:0000A832 ESP:0000A822 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
0FB7:00000D4D  pop  cx                                                EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000014 EDI:00005866 EBP:0000A832 ESP:0000A822 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
0FB7:00000D4E  pop  di                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00005866 EBP:0000A832 ESP:0000A824 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
0FB7:00000D4F  pop  es                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00000003 EBP:0000A832 ESP:0000A826 DS:582F ES:1720 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
0FB7:00000D50  pop  si                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000014 EDI:00000003 EBP:0000A832 ESP:0000A828 DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1

*/
}

void parse_chunk_header()
{
//0FB7:00000D51  dec  cx                                                EAX:00000000 EBX:00000001 ECX:00000001 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D52  cmp  cx,[si+08]                 ds:[000C]=0001         EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D55  jc   00000D5A ($+3)             (down)                 EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000D5A  shl  cx,02                                             EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000D5D  add  cx,[si+06]                 ds:[000A]=0030         EAX:00000000 EBX:00000001 ECX:00000000 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000D60  add  cx,si                                             EAX:00000000 EBX:00000001 ECX:00000030 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D62  mov  bx,cx                                             EAX:00000000 EBX:00000001 ECX:00000034 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D64  mov  ax,[bx]                    ds:[0034]=0038         EAX:00000000 EBX:00000034 ECX:00000034 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D66  mov  dx,[bx+02]                 ds:[0036]=0000         EAX:00000038 EBX:00000034 ECX:00000034 EDX:0000582F ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D69  add  si,ax                                             EAX:00000038 EBX:00000034 ECX:00000034 EDX:00000000 ESI:00000004 EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D6B  adc  dx,0000                                           EAX:00000038 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D6E  ror  dx,04                                             EAX:00000038 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D71  mov  ax,ds                                             EAX:00000038 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D73  add  ax,dx                                             EAX:0000582F EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000D75  mov  ds,ax                                             EAX:0000582F EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D77  xor  ax,ax                                             EAX:0000582F EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000D79  ret                                                    EAX:00000000 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82A DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000CEA  test al,al                                             EAX:00000000 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000CEC  jne  00000D00 ($+12)            (no jmp)               EAX:00000000 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000CEE  mov  cx,[bp+0C]                 ss:[A83E]=0003         EAX:00000000 EBX:00000034 ECX:00000034 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	cx = 0x0003;
//0FB7:00000CF1  mov  dx,[bp+0E]                 ss:[A840]=FFFF         EAX:00000000 EBX:00000034 ECX:00000003 EDX:00000000 ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	dx = 0xFFFF;
//0FB7:00000CF4  mov  ax,[bp+10]                 ss:[A842]=0001         EAX:00000000 EBX:00000034 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	ax = 0x0001;
//0FB7:00000CF7  les  di,[bp+12]                 ss:[A844]=000A         EAX:00000001 EBX:00000034 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:00000003 EBP:0000A832 ESP:0000A82C DS:582F ES:0192 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000CFA  mov  bx,[bp+16]                 ss:[A848]=0004         EAX:00000001 EBX:00000034 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A832 ESP:0000A82C DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = 0x0004;
//0FB7:00000CFD  call 00000DA6 ($+a6)                                   EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A832 ESP:0000A82C DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DA6  enter 0026,00                                          EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A832 ESP:0000A82A DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DAA  push si                                                EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A802 DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DAB  push di                                                EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A800 DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DAC  push es                                                EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FE DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DAD  push ds                                                EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FC DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DAE  mov  [bp-08],es                 ss:[A820]=0014         EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DB1  mov  [bp-0A],di                 ss:[A81E]=1720         EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DB4  mov  [bp-20],ax                 ss:[A808]=1285         EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DB7  mov  [bp-02],dx                 ss:[A826]=0192         EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DBA  mov  [bp-04],cx                 ss:[A824]=0003         EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DBD  shr  bx,1                                              EAX:00000001 EBX:00000004 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000DBF  cmp  word cs:[0BFD],0003        cs:[0BFD]=0000         EAX:00000001 EBX:00000002 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000DC5  je   00000DCA ($+3)             (no jmp)               EAX:00000001 EBX:00000002 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00000DC7  shr  bx,02                                             EAX:00000001 EBX:00000002 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	bx = bx >> 2;
//0FB7:00000DCA  mov  [bp-14],bx                 ss:[A814]=0F86         EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:1 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000DCD  push cs                                                EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:1 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000DCE  pop  es                                                EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7F8 DS:582F ES:0089 FS:0000 GS:0000 SS:1720 CF:1 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000DCF  test al,04                                             EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000DD1  je   00000DE2 ($+f)             (down)                 EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
}

void lodsw()
{
	uint16_t w = *(uint16_t*)&(gc_buf[si]);
	si += 2;
	ax = w;
}

void lodsb()
{
	*al = gc_buf[si++];
}

void stosw()
{
	uint16_t* addr = (uint16_t*)&es[di];
	*addr = ax;
	di += 2;
}

void cbw()
{
	if (*al & 0x80)
		*ah = 0xFF;
	else
		*ah = 0x00;
}

void xchg(uint16_t* reg1, uint16_t* reg2)
{
	uint16_t save = *reg1;
	*reg1 = *reg2;
	*reg2 = save;
}

void shl(uint16_t* reg, uint8_t shift)
{
	carry = *reg & 0x8000;
	*reg = *reg << shift;
}

void movw(uint8_t* seg, uint16_t addr, uint16_t value)
{
	uint16_t* addrw = (uint16_t*)&seg[addr];
	*addrw = value;
}

uint16_t getw(uint8_t* seg, uint16_t addr)
{
	uint16_t* addrw = (uint16_t*)&seg[addr];
	return *addrw;
}

uint16_t getb(uint8_t* seg, uint16_t addr)
{
	return seg[addr];
}


void movb(uint8_t* seg, uint16_t addr, uint8_t value)
{
	seg[addr] = value;
}

void incb(uint8_t* seg, uint16_t addr, uint8_t val)
{
	seg[addr] += val;
}

void decw(uint8_t* seg, uint16_t addr, uint16_t val)
{
	uint16_t* addrw = (uint16_t*)&seg[addr];
	*addrw = *addrw - val;
}

void rolb(uint8_t* seg, uint16_t addr, uint8_t num)
{
	uint8_t val = seg[addr];
	for (uint8_t i = 0; i < num; ++i)
	{
		uint8_t c = val & 0x80;
		val = val << 1;
		val |= c;
	}
	seg[addr] = val;
}

//rolb(ssA803);

void read_gc_start()
{
	si = 0x3C;
//0FB7:00000DE2  lodsw                                                  EAX:00000001 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003C EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	lodsw();
//0FB7:00000DE3  mov  [bp-18],ax                 ss:[A810]=A82A         EAX:00001DA4 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	printf("");
//0FB7:00000DE6  and  al,F0                                             EAX:00001DA4 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	*al &= 0xF0;
//0FB7:00000DE8  cmp  al,A0                                             EAX:00001DA0 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:1
	bool cmp = *al == 0xA0;
//0FB7:00000DEA  mov  al,01                                             EAX:00001DA0 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	*al = 0x01;
//0FB7:00000DEC  jne  00000E01 ($+13)            (no jmp)               EAX:00001D01 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	if (!cmp)
	{
		// 00000E01
	}
//0FB7:00000DEE  call 00000E4D ($+5c)                                   EAX:00001D01 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	printf("");
//0FB7:00000E4D  mov  di,0BF5                                           EAX:00001D01 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:0000000A EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	di = 0x0BF5;
//0FB7:00000E50  lodsw                                                  EAX:00001D01 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:0000003E EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	lodsw();
//0FB7:00000E51  and  ax,01FF                                           EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	ax &= 0x01FF;
//0FB7:00000E54  test word [bp-20],0008          ss:[A808]=0001         EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	printf("");
//0FB7:00000E59  jne  00000E64 ($+9)             (no jmp)               EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000E5B  cmp  word [bp-02],FFFF          ss:[A826]=FFFF         EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000E5F  je   00000E64 ($+3)             (down)                 EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1

//0FB7:00000E64  add  ax,cs:[0C05]               cs:[0C05]=0028         EAX:00000000 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	ax += cs0C05;
//0FB7:00000E69  stosw                                                  EAX:00000028 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF5 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	stosw();
//0FB7:00000E6A  mov  [bp-02],ax                 ss:[A826]=FFFF         EAX:00000028 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000E6D  mov  dx,ax                                             EAX:00000028 EBX:00000000 ECX:00000003 EDX:0000FFFF ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	dx = ax;
//0FB7:00000E6F  mov  al,[si-01]                 ds:[003F]=9000         EAX:00000028 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	*al = gc_buf[si - 0x01];
//0FB7:00000E72  shr  al,1                                              EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	*al = *al >> 1;
//0FB7:00000E74  cbw                                                    EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000E75  test word [bp-20],0008          ss:[A808]=0001         EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000E7A  jne  00000E85 ($+9)             (no jmp)               EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000E7C  cmp  word [bp-04],FFFF          ss:[A824]=0003         EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000E80  je   00000E85 ($+3)             (no jmp)               EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000E82  mov  ax,[bp-04]                 ss:[A824]=0003         EAX:00000000 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	ax = 0x0003;
//0FB7:00000E85  stosw                                                  EAX:00000003 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF7 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	stosw();
//0FB7:00000E86  mov  [bp-04],ax                 ss:[A824]=0003         EAX:00000003 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000E89  mov  bx,ax                                             EAX:00000003 EBX:00000000 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	bx = ax;
//0FB7:00000E8B  mov  ax,cs:[0C03]               cs:[0C03]=0050         EAX:00000003 EBX:00000003 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	ax = cs0C03;
//0FB7:00000E8F  mov  cx,cs:[0BFD]               cs:[0BFD]=0000         EAX:00000050 EBX:00000003 ECX:00000003 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	cx = 0x0000; // do a check here, CS and ES are pointing at the same location?
//0FB7:00000E94  cmp  cx,0002                                           EAX:00000050 EBX:00000003 ECX:00000000 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000E97  jc   00000E9C ($+3)             (down)                 EAX:00000050 EBX:00000003 ECX:00000000 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00000E9C  mul  dx                                                EAX:00000050 EBX:00000003 ECX:00000000 EDX:00000028 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	ax = ax * dx;
//0FB7:00000E9E  cmp  cx,0003                                           EAX:00000C80 EBX:00000003 ECX:00000000 EDX:00000000 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00000EA1  jc   00000EA6 ($+3)             (down)                 EAX:00000C80 EBX:00000003 ECX:00000000 EDX:00000000 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00000EA6  add  bx,ax                                             EAX:00000C80 EBX:00000003 ECX:00000000 EDX:00000000 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	bx += ax;
//0FB7:00000EA8  mov  [bp-06],bx                 ss:[A822]=0001         EAX:00000C80 EBX:00000C83 ECX:00000000 EDX:00000000 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000EAB  lodsw                                                  EAX:00000C80 EBX:00000C83 ECX:00000000 EDX:00000000 ESI:00000040 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	lodsw();
//0FB7:00000EAC  and  ax,01FF                                           EAX:0000A190 EBX:00000C83 ECX:00000000 EDX:00000000 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	ax &= 0x01FF;
//0FB7:00000EAF  mov  dx,cs:[0BFF]               cs:[0BFF]=01E0         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:00000000 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	dx = 0x01E0;
//0FB7:00000EB4  test word [bp-20],0008          ss:[A808]=0001         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001E0 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000EB9  jne  00000EC0 ($+5)             (no jmp)               EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001E0 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000EBB  mov  dx,cs:[0C01]               cs:[0C01]=01E0         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001E0 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	dx = 0x01E0;
//0FB7:00000EC0  sub  dx,[bp-02]                 ss:[A826]=0028         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001E0 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	dx -= 0x0028;
//0FB7:00000EC3  cmp  ax,dx                                             EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000EC5  jbe  00000EC9 ($+2)             (down)                 EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000EC9  stosw                                                  EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BF9 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
	stosw();
//0FB7:00000ECA  mov  [bp-12],ax                 ss:[A816]=0037         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFB EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000ECD  mov  al,[si-01]                 ds:[0041]=C7A1         EAX:00000190 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFB EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
	*al = gc_buf[si - 0x01];
//0FB7:00000ED0  shr  al,1                                              EAX:000001A1 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFB EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
	*al = *al >> 1;
//0FB7:00000ED2  cbw                                                    EAX:00000150 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFB EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	cbw();
//0FB7:00000ED3  stosw                                                  EAX:00000050 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFB EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	stosw();
//0FB7:00000ED4  mov  [bp-0E],ax                 ss:[A81A]=0CBA         EAX:00000050 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	movw(ss, 0xA81A, ax);
//0FB7:00000ED7  shl  ax,03                                             EAX:00000050 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	shl(&ax, 0x03);
//0FB7:00000EDA  mov  [bp-10],ax                 ss:[A818]=0CBA         EAX:00000280 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000EDD  test byte [bp-18],01            ss:[A810]=1DA4         EAX:00000280 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000EE1  mov  bx,1215                                           EAX:00000280 EBX:00000C83 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = 0x1215;
//0FB7:00000EE4  mov  dx,0003                                           EAX:00000280 EBX:00001215 ECX:00000000 EDX:000001B8 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	dx = 0x0003;
//0FB7:00000EE7  jne  00000EED ($+4)             (no jmp)               EAX:00000280 EBX:00001215 ECX:00000000 EDX:00000003 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000EE9  mov  bx,1200                                           EAX:00000280 EBX:00001215 ECX:00000000 EDX:00000003 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = 0x1200;
//0FB7:00000EEC  inc  dx                                                EAX:00000280 EBX:00001200 ECX:00000000 EDX:00000003 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	++dx;
//0FB7:00000EED  mov  [bp-16],dx                 ss:[A812]=104B         EAX:00000280 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	movw(ss, 0xA812, dx);
//0FB7:00000EF0  mov  [bp-22],bx                 ss:[A806]=0000         EAX:00000280 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	movw(ss, 0xA806, bx);
//0FB7:00000EF3  lodsw                                                  EAX:00000280 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000042 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	lodsw();
//0FB7:00000EF4  lodsw                                                  EAX:00006CC7 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000044 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	lodsw();
//0FB7:00000EF5  clc                                                    EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000EF6  ret                                                    EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000DF1  jc   00000E01 ($+e)             (no jmp)               EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000DF3  test byte [bp-18],04            ss:[A810]=1DA4         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000DF7  je   00000DFE ($+5)             (no jmp)               EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000DF9  call 00000F69 ($+16d)                                  EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7FA DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
}

uint16_t readword(uint16_t index)
{
	uint16_t* addr = (uint16_t*)&gc_buf[index];
	return *addr;
}

void writeword(uint16_t index, uint16_t value)
{
	uint16_t* addr = (uint16_t*)&es[index];
	*addr = value;
}

uint8_t readbyte(uint16_t index)
{
	return gc_buf[index];
}

void read_gc_chunk()
{
//0FB7:00000F69  mov  di,0002                                           EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000BFD EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	di = 0x0002;
//0FB7:00000F6C  mov  cx,0140                                           EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000002 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	cx = 0x0140;
//0FB7:00000F6F  xor  ax,ax                                             EAX:00000000 EBX:00001200 ECX:00000140 EDX:00000004 ESI:00000046 EDI:00000002 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	ax = ax ^ ax;
//0FB7:00000F71  repe stosw                                             EAX:00000000 EBX:00001200 ECX:00000140 EDX:00000004 ESI:00000046 EDI:00000002 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	while (cx)
	{
		--cx;
		stosw();
	}
	// hardcode 0002, 0140, 0000 and 55 to the stack
//0FB7:00000F73  mov  word [bp-1C],0002          ss:[A80C]=01E0         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	movw(ss, 0xA80C, 0x0002);
//0FB7:00000F78  mov  word [bp-1A],0140          ss:[A80E]=0280         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	movw(ss, 0xA80E, 0x0140);
//0FB7:00000F7D  mov  word [bp-1E],0000          ss:[A80A]=31E4         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	movw(ss, 0xA80A, 0x0000);
//0FB7:00000F82  mov  byte [bp-25],55            ss:[A803]=0000         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	movb(ss, 0xA803, 0x55);

//0FB7:00000F86  mov  bx,[bp-0E]                 ss:[A81A]=0050         EAX:00000000 EBX:00001200 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = getw(ss, 0xA81A); // Set earlier by //0FB7:00000ED4  mov  [bp-0E],ax                 ss:[A81A]=0CBA
//0FB7:00000F89  shl  bx,1                                              EAX:00000000 EBX:00000050 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&bx, 0x01);
//0FB7:00000F8B  add  bx,[bp-0E]                 ss:[A81A]=0050         EAX:00000000 EBX:000000A0 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	bx += getw(ss, 0xA81A);
//0FB7:00000F8E  add  bx,134F                                           EAX:00000000 EBX:000000F0 ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	bx += 0x0134F;
//0FB7:00000F92  mov  [bp-24],bx                 ss:[A804]=0000         EAX:00000000 EBX:0000143F ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	movw(ss, 0xA804, bx);
//0FB7:00000F95  push word cs:[bx]               cs:[143F]=90C3         EAX:00000000 EBX:0000143F ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F8 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000F98  mov  byte cs:[bx],C3            cs:[143F]=90C3         EAX:00000000 EBX:0000143F ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000F9C  lodsw                                                  EAX:00000000 EBX:0000143F ECX:00000000 EDX:00000004 ESI:00000046 EDI:00000282 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	lodsw();
//0FB7:00000F9D  xchg dx,ax                                             EAX:0000D8D8 EBX:0000143F ECX:00000000 EDX:00000004 ESI:00000048 EDI:00000282 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	xchg(&dx, &ax);
//0FB7:00000F9E  mov  cx,0010                                           EAX:00000004 EBX:0000143F ECX:00000000 EDX:0000D8D8 ESI:00000048 EDI:00000282 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	cx = 0x0010;

// 0FA1 is function entry point, 0F9E (CX to 0010) is only called once, after this, CL is directly set to 10.	
//0FB7:00000FA1  mov  di,[bp-1C]                 ss:[A80C]=0002         EAX:00000004 EBX:0000143F ECX:00000010 EDX:0000D8D8 ESI:00000048 EDI:00000282 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	di = 0x0002;
//0FB7:00000FA4  mov  ax,[bp-0E]                 ss:[A81A]=0050         EAX:00000004 EBX:0000143F ECX:00000010 EDX:0000D8D8 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	ax = getw(ss, 0xA81A);
//0FB7:00000FA7  mov  [bp-0C],ax                 ss:[A81C]=0001         EAX:00000050 EBX:0000143F ECX:00000010 EDX:0000D8D8 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	movw(ss, 0xA81C, ax);
//0FB7:00000FAA  shl  dx,1                                              EAX:00000050 EBX:0000143F ECX:00000010 EDX:0000D8D8 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&dx, 1);
//0FB7:00000FAC  dec  cx                                                EAX:00000050 EBX:0000143F ECX:00000010 EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	--cx;
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	shl(&dx, 1);
//0FB7:00000FB7  dec  cx                                                EAX:00000050 EBX:0000143F ECX:0000000F EDX:00006360 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:00000050 EBX:0000143F ECX:0000000E EDX:00006360 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:00000050 EBX:0000143F ECX:0000000E EDX:00006360 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:00000050 EBX:0000143F ECX:0000000E EDX:00006360 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	shl(&dx, 1);
//0FB7:00000FC2  dec  cx                                                EAX:00000050 EBX:0000143F ECX:0000000E EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:1 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:00000050 EBX:0000143F ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:00000050 EBX:0000143F ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	function0000100E();
/*
//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0000         EAX:00000050 EBX:0000143F ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	bx = getw(ss, 0xA80A);
//0FB7:00001011  shl  bx,1                                              EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	shl(&bx, 1);
//0FB7:00001013  shl  bx,1                                              EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	shl(&bx, 1);
//0FB7:00001015  mov  ax,[si]                    ds:[0048]=EFCD         EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	ax = readword(si);
//0FB7:00001017  mov  es:[bx+0282],ax            es:[0282]=5151         EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	writeword(bx + 0x0282, ax);
//0FB7:0000101C  stosw                                                  EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	stosw();
//0FB7:0000101D  mov  ax,[si+02]                 ds:[004A]=DEBC         EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	ax = readword(si + 0x02);
//0FB7:00001020  mov  es:[bx+0284],ax            es:[0284]=AA51         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	writeword(bx + 0x0284, ax);
//0FB7:00001025  stosw                                                  EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	stosw();
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	si += getw(ss, 0xA812);
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0000         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	incb(ss, 0xA80A, 1);

//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
*/	
	printf("");
/* Looks like the start of a function. Later on, the code jumps back to 00000FD8*/
//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0050         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	decw(ss, 0xA81C, 1);
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	shl(&dx, 1);
//0FB7:00000FAC  dec  cx                                                EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:00008D80 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	--cx;
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000DEBC EBX:00000000 ECX:0000000C EDX:00008D80 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000DEBC EBX:00000000 ECX:0000000C EDX:00008D80 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000DEBC EBX:00000000 ECX:0000000C EDX:00008D80 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&dx, 1);
//0FB7:00000FB7  dec  cx                                                EAX:0000DEBC EBX:00000000 ECX:0000000C EDX:00001B00 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000DEBC EBX:00000000 ECX:0000000B EDX:00001B00 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000DEBC EBX:00000000 ECX:0000000B EDX:00001B00 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000DEBC EBX:00000000 ECX:0000000B EDX:00001B00 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	shl(&dx, 1);
//0FB7:00000FC2  dec  cx                                                EAX:0000DEBC EBX:00000000 ECX:0000000B EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000DEBC EBX:00000000 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:0000DEBC EBX:00000000 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1

// Loops here
	function0000100E();
/*
//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0001         EAX:0000DEBC EBX:00000000 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = getw(ss, 0xA80A);
//0FB7:00001011  shl  bx,1                                              EAX:0000DEBC EBX:00000001 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&bx, 1);
//0FB7:00001013  shl  bx,1                                              EAX:0000DEBC EBX:00000002 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	shl(&bx, 1);
//0FB7:00001015  mov  ax,[si]                    ds:[004C]=E0E0         EAX:0000DEBC EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	ax = readword(si);
//0FB7:00001017  mov  es:[bx+0282],ax            es:[0286]=3101         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	writeword(bx + 0x0282, ax);
//0FB7:0000101C  stosw                                                  EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	stosw();
//0FB7:0000101D  mov  ax,[si+02]                 ds:[004E]=E0E0         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000008 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	ax = readword(si + 0x02);
//0FB7:00001020  mov  es:[bx+0284],ax            es:[0288]=3201         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000008 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	writeword(bx + 0x0284, ax);
//0FB7:00001025  stosw                                                  EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:00000008 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	stosw();
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:0000004C EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
	si += getw(ss, 0xA812);
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0001         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	incb(ss, 0xA80A, 1);
//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
*/
// Loop
//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=004F         EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	decw(ss, 0xA81C, 1);
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00003600 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&dx, 1);
//0FB7:00000FAC  dec  cx                                                EAX:0000E0E0 EBX:00000004 ECX:0000000A EDX:00006C00 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000E0E0 EBX:00000004 ECX:00000009 EDX:00006C00 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (down)                 EAX:0000E0E0 EBX:00000004 ECX:00000009 EDX:00006C00 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FF6  shl  dx,1                                              EAX:0000E0E0 EBX:00000004 ECX:00000009 EDX:00006C00 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	shl(&dx, 1);
//0FB7:00000FF8  dec  cx                                                EAX:0000E0E0 EBX:00000004 ECX:00000009 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:1 AF:1 PF:1 IF:1
	--cx;
//0FB7:00000FF9  jne  00000FFF ($+4)             (down)                 EAX:0000E0E0 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FFF  jnc  00001056 ($+55)            (down)                 EAX:0000E0E0 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	if (carry)
	{

	}
//0FB7:00001056  rol  byte [bp-25],1             ss:[A803]=3F55         EAX:0000E0E0 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	rolb(ss, 0xA803, 1); // changes 55 into AA
//0FB7:00001059  jc   00001064 ($+9)             (no jmp)               EAX:0000E0E0 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000105B  lodsb                                                  EAX:0000E0E0 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000050 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
	lodsb();
//0FB7:0000105C  mov  [bp-26],al                 ss:[A802]=AA00         EAX:0000E055 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
	movb(ss, 0xA802, *al);
//0FB7:0000105F  and  ax,000F                                           EAX:0000E055 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
	ax = ax & 0x000F;
//0FB7:00001062  jmp  short 0000106B ($+7)       (down)                 EAX:00000005 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000106B  mov  bx,1441                                           EAX:00000005 EBX:00000004 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	bx = 0x1441;
//0FB7:0000106E  cmp  al,04                                             EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001070  jc   00001087 ($+15)            (no jmp)               EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001072  push cx                                                EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	stack.push_back(cx);
//0FB7:00001073  cmp  al,0A                                             EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001075  jc   00001096 ($+1f)            (down)                 EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00001096  sub  al,04                                             EAX:00000005 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
	*al = *al - 0x04;
//0FB7:00001098  xlat                                                   EAX:00000001 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	*al = 0xF8;
//0FB7:0000109A  cbw                                                    EAX:000000F8 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	ax = 0xFFF8;
//0FB7:0000109B  xchg bx,ax                                             EAX:0000FFF8 EBX:00001441 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	xchg(&bx, &ax);
//0FB7:0000109C  rol  byte [bp-25],1             ss:[A803]=3FAA         EAX:00001441 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	rolb(ss, 0xA803, 1);
// changes 3F in 
//0FB7:0000109F  jc   000010AA ($+9)             (down)                 EAX:00001441 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:000010AA  mov  al,[bp-26]                 ss:[A802]=5555         EAX:00001441 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
	*al = getb(ss, 0xA802);
//0FB7:000010AD  shr  al,04                                             EAX:00001455 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
	*al = *al >> 4;
//0FB7:000010B0  cbw                                                    EAX:00001405 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	cbw();
//0FB7:000010B1  add  ax,0001                                           EAX:00000005 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
	++ax;
//0FB7:000010B4  sub  [bp-0C],ax                 ss:[A81C]=004E         EAX:00000006 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	decw(ss, 0xA81c, ax);
//0FB7:000010B7  inc  ax                                                EAX:00000006 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
	++ax;
//0FB7:000010B8  xchg cx,ax                                             EAX:00000007 EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	xchg(&cx, &ax);
//0FB7:000010B9  test bx,bx                                             EAX:00000008 EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:000010BB  je   000010D0 ($+13)            (no jmp)               EAX:00000008 EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010BD  js   000010C2 ($+3)             (down)                 EAX:00000008 EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1

	// Start loop
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:00000008 EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
// End Loop
	function000010C2();
	printf("");
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000D800 ESI:00000051 EDI:0000000E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:0000D800 ESI:00000051 EDI:0000000E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000D800 ESI:00000051 EDI:0000000E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000D800 ESI:00000051 EDI:00000010 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000D800 ESI:00000051 EDI:00000010 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000D800 ESI:00000051 EDI:00000012 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000005 EDX:0000D800 ESI:00000051 EDI:00000012 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000005 EDX:0000D800 ESI:00000051 EDI:00000012 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000005 EDX:0000D800 ESI:00000051 EDI:00000014 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000D800 ESI:00000051 EDI:00000014 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000D800 ESI:00000051 EDI:00000016 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000004 EDX:0000D800 ESI:00000051 EDI:00000016 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000D800 ESI:00000051 EDI:00000016 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000D800 ESI:00000051 EDI:00000018 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000D800 ESI:00000051 EDI:00000018 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000D800 ESI:00000051 EDI:0000001A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000003 EDX:0000D800 ESI:00000051 EDI:0000001A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000003 EDX:0000D800 ESI:00000051 EDI:0000001A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000003 EDX:0000D800 ESI:00000051 EDI:0000001C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000003 EDX:0000D800 ESI:00000051 EDI:0000001C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000003 EDX:0000D800 ESI:00000051 EDI:0000001E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000002 EDX:0000D800 ESI:00000051 EDI:0000001E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000D800 ESI:00000051 EDI:0000001E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000D800 ESI:00000051 EDI:00000020 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000D800 ESI:00000051 EDI:00000020 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000D800 ESI:00000051 EDI:00000022 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000001 EDX:0000D800 ESI:00000051 EDI:00000022 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000001 EDX:0000D800 ESI:00000051 EDI:00000022 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000001 EDX:0000D800 ESI:00000051 EDI:00000024 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000001 EDX:0000D800 ESI:00000051 EDI:00000024 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000001 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CC  pop  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000000 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1

	cx = stack.back(); stack.pop_back();
//0FB7:000010CD  jmp  00000FD8 ($-f8)            (up)                   EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
	// and we now jump back to line 485. Continue the shifting.

//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0048         EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
	if (!handlerepetitions((uint16_t*)&ss[0xA81C]))
	{
		int control = NO_ACTION;
		while (control == NO_ACTION)
		{
			control = handlecontrolword(&dx, &cx);
		}

		printf("");
	}

//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC2  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1

//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0002         EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001011  shl  bx,1                                              EAX:0000DEBC EBX:00000002 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001013  shl  bx,1                                              EAX:0000DEBC EBX:00000004 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001015  mov  ax,[si]                    ds:[0051]=E3E3         EAX:0000DEBC EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001017  mov  es:[bx+0282],ax            es:[028A]=1D11         EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101C  stosw                                                  EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101D  mov  ax,[si+02]                 ds:[0053]=E2E2         EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001020  mov  es:[bx+0284],ax            es:[028C]=2E11         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001025  stosw                                                  EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0002         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1

//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0047         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:00008000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000E2E2 EBX:00000008 ECX:00000004 EDX:00008000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000E2E2 EBX:00000008 ECX:00000004 EDX:00008000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000E2E2 EBX:00000008 ECX:00000004 EDX:00008000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:0000E2E2 EBX:00000008 ECX:00000004 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:1 SF:0 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000E2E2 EBX:00000008 ECX:00000003 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000E2E2 EBX:00000008 ECX:00000003 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000E2E2 EBX:00000008 ECX:00000003 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC2  dec  cx                                                EAX:0000E2E2 EBX:00000008 ECX:00000003 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000E2E2 EBX:00000008 ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:0000E2E2 EBX:00000008 ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0003         EAX:0000E2E2 EBX:00000008 ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001011  shl  bx,1                                              EAX:0000E2E2 EBX:00000003 ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001013  shl  bx,1                                              EAX:0000E2E2 EBX:00000006 ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001015  mov  ax,[si]                    ds:[0055]=6161         EAX:0000E2E2 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001017  mov  es:[bx+0282],ax            es:[028E]=5050         EAX:00006161 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000101C  stosw                                                  EAX:00006161 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000101D  mov  ax,[si+02]                 ds:[0057]=21A1         EAX:00006161 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002C EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001020  mov  es:[bx+0284],ax            es:[0290]=A250         EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002C EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001025  stosw                                                  EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002C EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000055 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0003         EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1

//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0046         EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:000021A1 EBX:0000000C ECX:00000002 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:000021A1 EBX:0000000C ECX:00000001 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (down)                 EAX:000021A1 EBX:0000000C ECX:00000001 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FF6  shl  dx,1                                              EAX:000021A1 EBX:0000000C ECX:00000001 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FF8  dec  cx                                                EAX:000021A1 EBX:0000000C ECX:00000001 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FF9  jne  00000FFF ($+4)             (no jmp)               EAX:000021A1 EBX:0000000C ECX:00000000 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FFB  lodsw                                                  EAX:000021A1 EBX:0000000C ECX:00000000 EDX:00000000 ESI:00000059 EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FFC  xchg dx,ax                                             EAX:0000EC1B EBX:0000000C ECX:00000000 EDX:00000000 ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FFD  mov  cl,10                                             EAX:00000000 EBX:0000000C ECX:00000000 EDX:0000EC1B ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FFF  jnc  00001056 ($+55)            (down)                 EAX:00000000 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001056  rol  byte [bp-25],1             ss:[A803]=3F55         EAX:00000000 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001059  jc   00001064 ($+9)             (no jmp)               EAX:00000000 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:0000105B  lodsb                                                  EAX:00000000 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005B EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:0000105C  mov  [bp-26],al                 ss:[A802]=AA55         EAX:00000047 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:0000105F  and  ax,000F                                           EAX:00000047 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:00001062  jmp  short 0000106B ($+7)       (down)                 EAX:00000007 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:0000106B  mov  bx,1441                                           EAX:00000007 EBX:0000000C ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:0000106E  cmp  al,04                                             EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001070  jc   00001087 ($+15)            (no jmp)               EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001072  push cx                                                EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001073  cmp  al,0A                                             EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001075  jc   00001096 ($+1f)            (down)                 EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00001096  sub  al,04                                             EAX:00000007 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00001098  xlat                                                   EAX:00000003 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109A  cbw                                                    EAX:000000E0 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109B  xchg bx,ax                                             EAX:0000FFE0 EBX:00001441 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109C  rol  byte [bp-25],1             ss:[A803]=3FAA         EAX:00001441 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109F  jc   000010AA ($+9)             (down)                 EAX:00001441 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010AA  mov  al,[bp-26]                 ss:[A802]=5547         EAX:00001441 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010AD  shr  al,04                                             EAX:00001447 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010B0  cbw                                                    EAX:00001404 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:000010B1  add  ax,0001                                           EAX:00000004 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:000010B4  sub  [bp-0C],ax                 ss:[A81C]=0045         EAX:00000005 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010B7  inc  ax                                                EAX:00000005 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:000010B8  xchg cx,ax                                             EAX:00000006 EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010B9  test bx,bx                                             EAX:00000010 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010BB  je   000010D0 ($+13)            (no jmp)               EAX:00000010 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010BD  js   000010C2 ($+3)             (down)                 EAX:00000010 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:00000010 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:0000002E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:00000030 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:00000030 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFE0 ECX:00000006 EDX:0000EC1B ESI:0000005C EDI:00000032 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000005 EDX:0000EC1B ESI:0000005C EDI:00000032 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFE0 ECX:00000005 EDX:0000EC1B ESI:0000005C EDI:00000032 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFE0 ECX:00000005 EDX:0000EC1B ESI:0000005C EDI:00000034 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFE0 ECX:00000005 EDX:0000EC1B ESI:0000005C EDI:00000034 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFE0 ECX:00000005 EDX:0000EC1B ESI:0000005C EDI:00000036 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFE0 ECX:00000004 EDX:0000EC1B ESI:0000005C EDI:00000036 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000004 EDX:0000EC1B ESI:0000005C EDI:00000036 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000004 EDX:0000EC1B ESI:0000005C EDI:00000038 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000004 EDX:0000EC1B ESI:0000005C EDI:00000038 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFE0 ECX:00000004 EDX:0000EC1B ESI:0000005C EDI:0000003A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000003 EDX:0000EC1B ESI:0000005C EDI:0000003A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFE0 ECX:00000003 EDX:0000EC1B ESI:0000005C EDI:0000003A EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFE0 ECX:00000003 EDX:0000EC1B ESI:0000005C EDI:0000003C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFE0 ECX:00000003 EDX:0000EC1B ESI:0000005C EDI:0000003C EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFE0 ECX:00000003 EDX:0000EC1B ESI:0000005C EDI:0000003E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFE0 ECX:00000002 EDX:0000EC1B ESI:0000005C EDI:0000003E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000002 EDX:0000EC1B ESI:0000005C EDI:0000003E EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000002 EDX:0000EC1B ESI:0000005C EDI:00000040 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000E0E0 EBX:0000FFE0 ECX:00000002 EDX:0000EC1B ESI:0000005C EDI:00000040 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000E0E0 EBX:0000FFE0 ECX:00000002 EDX:0000EC1B ESI:0000005C EDI:00000042 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C2  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFE0 ECX:00000001 EDX:0000EC1B ESI:0000005C EDI:00000042 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C5  stosw                                                  EAX:0000EFCD EBX:0000FFE0 ECX:00000001 EDX:0000EC1B ESI:0000005C EDI:00000042 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C6  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFE0 ECX:00000001 EDX:0000EC1B ESI:0000005C EDI:00000044 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010C9  stosw                                                  EAX:0000DEBC EBX:0000FFE0 ECX:00000001 EDX:0000EC1B ESI:0000005C EDI:00000044 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CA  loop 000010C2 ($-a)                                    EAX:0000DEBC EBX:0000FFE0 ECX:00000001 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CC  pop  cx                                                EAX:0000DEBC EBX:0000FFE0 ECX:00000000 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:000010CD  jmp  00000FD8 ($-f8)            (up)                   EAX:0000DEBC EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0040         EAX:0000DEBC EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000DEBC EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000DEBC EBX:0000FFE0 ECX:00000010 EDX:0000EC1B ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000DEBC EBX:0000FFE0 ECX:00000010 EDX:0000D836 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFE0 ECX:0000000F EDX:0000D836 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000DEBC EBX:0000FFE0 ECX:0000000F EDX:0000D836 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000DEBC EBX:0000FFE0 ECX:0000000F EDX:0000D836 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:0000DEBC EBX:0000FFE0 ECX:0000000F EDX:0000B06C ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000DEBC EBX:0000FFE0 ECX:0000000E EDX:0000B06C ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000DEBC EBX:0000FFE0 ECX:0000000E EDX:0000B06C ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000DEBC EBX:0000FFE0 ECX:0000000E EDX:0000B06C ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC2  dec  cx                                                EAX:0000DEBC EBX:0000FFE0 ECX:0000000E EDX:000060D8 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFE0 ECX:0000000D EDX:000060D8 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (no jmp)               EAX:0000DEBC EBX:0000FFE0 ECX:0000000D EDX:000060D8 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FCB  shl  dx,1                                              EAX:0000DEBC EBX:0000FFE0 ECX:0000000D EDX:000060D8 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FCD  dec  cx                                                EAX:0000DEBC EBX:0000FFE0 ECX:0000000D EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:1 AF:1 PF:0 IF:1
//0FB7:00000FCE  jne  00000FD4 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FD4  jnc  0000102E ($+58)            (down)                 EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000102E  call near word [bp-22]          ss:[A806]=1200         EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001200  rol  byte [bp-25],1             ss:[A803]=3F55         EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001203  jc   0000120D ($+8)             (no jmp)               EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:00001205  lodsb                                                  EAX:0000DEBC EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005C EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:00001206  mov  [bp-26],al                 ss:[A802]=AA47         EAX:0000DE70 EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:00001209  and  ax,000F                                           EAX:0000DE70 EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:0000120C  ret                                                    EAX:00000000 EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001031  xchg bx,ax                                             EAX:00000000 EBX:0000FFE0 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001032  shl  bx,1                                              EAX:0000FFE0 EBX:00000000 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001034  mov  ax,cs:[bx+144F]            cs:[144F]=110D         EAX:0000FFE0 EBX:00000000 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001039  mov  bx,FFFC                                           EAX:0000110D EBX:00000000 ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000103C  call near ax                                           EAX:0000110D EBX:0000FFFC ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000110D  push cx                                                EAX:0000110D EBX:0000FFFC ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000110E  lodsb                                                  EAX:0000110D EBX:0000FFFC ECX:0000000C EDX:0000C1B0 ESI:0000005D EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:0000110F  mov  cl,al                                             EAX:00001146 EBX:0000FFFC ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001111  and  cl,3F                                             EAX:00001146 EBX:0000FFFC ECX:00000046 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00001114  add  cx,0011                                           EAX:00001146 EBX:0000FFFC ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001117  sub  [bp-0C],cx                 ss:[A81C]=003F         EAX:00001146 EBX:0000FFFC ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000111A  inc  cx                                                EAX:00001146 EBX:0000FFFC ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000111B  and  al,C0                                             EAX:00001146 EBX:0000FFFC ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000111D  rol  al,02                                             EAX:00001140 EBX:0000FFFC ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001120  mov  bx,1441                                           EAX:00001101 EBX:0000FFFC ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001123  xlat                                                   EAX:00001101 EBX:00001441 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001125  cbw                                                    EAX:000011F8 EBX:00001441 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001126  xchg bx,ax                                             EAX:0000FFF8 EBX:00001441 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:00001441 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000048 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000048 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:0000004A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:0000004A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:0000004A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:0000004C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:0000004C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000017 EDX:0000C1B0 ESI:0000005E EDI:0000004E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000016 EDX:0000C1B0 ESI:0000005E EDI:0000004E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000016 EDX:0000C1B0 ESI:0000005E EDI:0000004E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000016 EDX:0000C1B0 ESI:0000005E EDI:00000050 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000016 EDX:0000C1B0 ESI:0000005E EDI:00000050 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000016 EDX:0000C1B0 ESI:0000005E EDI:00000052 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000015 EDX:0000C1B0 ESI:0000005E EDI:00000052 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000015 EDX:0000C1B0 ESI:0000005E EDI:00000052 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000015 EDX:0000C1B0 ESI:0000005E EDI:00000054 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000015 EDX:0000C1B0 ESI:0000005E EDI:00000054 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000015 EDX:0000C1B0 ESI:0000005E EDI:00000056 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000014 EDX:0000C1B0 ESI:0000005E EDI:00000056 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000014 EDX:0000C1B0 ESI:0000005E EDI:00000056 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000014 EDX:0000C1B0 ESI:0000005E EDI:00000058 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000014 EDX:0000C1B0 ESI:0000005E EDI:00000058 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000014 EDX:0000C1B0 ESI:0000005E EDI:0000005A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000013 EDX:0000C1B0 ESI:0000005E EDI:0000005A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000013 EDX:0000C1B0 ESI:0000005E EDI:0000005A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000013 EDX:0000C1B0 ESI:0000005E EDI:0000005C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000013 EDX:0000C1B0 ESI:0000005E EDI:0000005C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000013 EDX:0000C1B0 ESI:0000005E EDI:0000005E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000012 EDX:0000C1B0 ESI:0000005E EDI:0000005E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000012 EDX:0000C1B0 ESI:0000005E EDI:0000005E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000012 EDX:0000C1B0 ESI:0000005E EDI:00000060 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000012 EDX:0000C1B0 ESI:0000005E EDI:00000060 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000012 EDX:0000C1B0 ESI:0000005E EDI:00000062 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000011 EDX:0000C1B0 ESI:0000005E EDI:00000062 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000011 EDX:0000C1B0 ESI:0000005E EDI:00000062 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000011 EDX:0000C1B0 ESI:0000005E EDI:00000064 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000011 EDX:0000C1B0 ESI:0000005E EDI:00000064 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000011 EDX:0000C1B0 ESI:0000005E EDI:00000066 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000010 EDX:0000C1B0 ESI:0000005E EDI:00000066 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000010 EDX:0000C1B0 ESI:0000005E EDI:00000066 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000010 EDX:0000C1B0 ESI:0000005E EDI:00000068 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000010 EDX:0000C1B0 ESI:0000005E EDI:00000068 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000010 EDX:0000C1B0 ESI:0000005E EDI:0000006A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000F EDX:0000C1B0 ESI:0000005E EDI:0000006A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:0000000F EDX:0000C1B0 ESI:0000005E EDI:0000006A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:0000000F EDX:0000C1B0 ESI:0000005E EDI:0000006C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:0000000F EDX:0000C1B0 ESI:0000005E EDI:0000006C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:0000000F EDX:0000C1B0 ESI:0000005E EDI:0000006E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:0000000E EDX:0000C1B0 ESI:0000005E EDI:0000006E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000E EDX:0000C1B0 ESI:0000005E EDI:0000006E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000E EDX:0000C1B0 ESI:0000005E EDI:00000070 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000E EDX:0000C1B0 ESI:0000005E EDI:00000070 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:0000000E EDX:0000C1B0 ESI:0000005E EDI:00000072 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000D EDX:0000C1B0 ESI:0000005E EDI:00000072 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:0000000D EDX:0000C1B0 ESI:0000005E EDI:00000072 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:0000000D EDX:0000C1B0 ESI:0000005E EDI:00000074 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:0000000D EDX:0000C1B0 ESI:0000005E EDI:00000074 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:0000000D EDX:0000C1B0 ESI:0000005E EDI:00000076 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:00000076 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:00000076 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:00000078 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:00000078 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:0000007A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000B EDX:0000C1B0 ESI:0000005E EDI:0000007A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:0000000B EDX:0000C1B0 ESI:0000005E EDI:0000007A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:0000000B EDX:0000C1B0 ESI:0000005E EDI:0000007C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:0000C1B0 ESI:0000005E EDI:0000007C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:0000C1B0 ESI:0000005E EDI:0000007E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:0000000A EDX:0000C1B0 ESI:0000005E EDI:0000007E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000A EDX:0000C1B0 ESI:0000005E EDI:0000007E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:0000000A EDX:0000C1B0 ESI:0000005E EDI:00000080 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:0000000A EDX:0000C1B0 ESI:0000005E EDI:00000080 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:0000000A EDX:0000C1B0 ESI:0000005E EDI:00000082 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000009 EDX:0000C1B0 ESI:0000005E EDI:00000082 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000009 EDX:0000C1B0 ESI:0000005E EDI:00000082 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000009 EDX:0000C1B0 ESI:0000005E EDI:00000084 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000009 EDX:0000C1B0 ESI:0000005E EDI:00000084 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000009 EDX:0000C1B0 ESI:0000005E EDI:00000086 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000C1B0 ESI:0000005E EDI:00000086 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000008 EDX:0000C1B0 ESI:0000005E EDI:00000086 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000008 EDX:0000C1B0 ESI:0000005E EDI:00000088 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000008 EDX:0000C1B0 ESI:0000005E EDI:00000088 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000008 EDX:0000C1B0 ESI:0000005E EDI:0000008A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000007 EDX:0000C1B0 ESI:0000005E EDI:0000008A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000007 EDX:0000C1B0 ESI:0000005E EDI:0000008A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000007 EDX:0000C1B0 ESI:0000005E EDI:0000008C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000C1B0 ESI:0000005E EDI:0000008C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000C1B0 ESI:0000005E EDI:0000008E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:0000008E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:0000008E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:00000090 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:00000090 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000006 EDX:0000C1B0 ESI:0000005E EDI:00000092 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000005 EDX:0000C1B0 ESI:0000005E EDI:00000092 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000005 EDX:0000C1B0 ESI:0000005E EDI:00000092 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000005 EDX:0000C1B0 ESI:0000005E EDI:00000094 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C1B0 ESI:0000005E EDI:00000094 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C1B0 ESI:0000005E EDI:00000096 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000004 EDX:0000C1B0 ESI:0000005E EDI:00000096 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000C1B0 ESI:0000005E EDI:00000096 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000C1B0 ESI:0000005E EDI:00000098 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000C1B0 ESI:0000005E EDI:00000098 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000004 EDX:0000C1B0 ESI:0000005E EDI:0000009A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000003 EDX:0000C1B0 ESI:0000005E EDI:0000009A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000003 EDX:0000C1B0 ESI:0000005E EDI:0000009A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000003 EDX:0000C1B0 ESI:0000005E EDI:0000009C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000003 EDX:0000C1B0 ESI:0000005E EDI:0000009C EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000003 EDX:0000C1B0 ESI:0000005E EDI:0000009E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000DEBC EBX:0000FFF8 ECX:00000002 EDX:0000C1B0 ESI:0000005E EDI:0000009E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000C1B0 ESI:0000005E EDI:0000009E EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000C1B0 ESI:0000005E EDI:000000A0 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000C1B0 ESI:0000005E EDI:000000A0 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000002 EDX:0000C1B0 ESI:0000005E EDI:000000A2 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000001 EDX:0000C1B0 ESI:0000005E EDI:000000A2 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000EFCD EBX:0000FFF8 ECX:00000001 EDX:0000C1B0 ESI:0000005E EDI:000000A2 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000EFCD EBX:0000FFF8 ECX:00000001 EDX:0000C1B0 ESI:0000005E EDI:000000A4 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000DEBC EBX:0000FFF8 ECX:00000001 EDX:0000C1B0 ESI:0000005E EDI:000000A4 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000DEBC EBX:0000FFF8 ECX:00000001 EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001131  pop  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000000 EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001132  ret                                                    EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000103E  jmp  short 00000FD8 ($-68)      (up)                   EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0028         EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:0000C1B0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:0000000C EDX:00008360 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:00008360 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:00008360 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:00008360 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:0000000B EDX:000006C0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:0000000A EDX:000006C0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:0000000A EDX:000006C0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:0000000A EDX:000006C0 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC2  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:0000000A EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0004         EAX:0000DEBC EBX:0000FFF8 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001011  shl  bx,1                                              EAX:0000DEBC EBX:00000004 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001013  shl  bx,1                                              EAX:0000DEBC EBX:00000008 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001015  mov  ax,[si]                    ds:[005E]=B5B5         EAX:0000DEBC EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001017  mov  es:[bx+0282],ax            es:[0292]=4141         EAX:0000B5B5 EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101C  stosw                                                  EAX:0000B5B5 EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A6 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101D  mov  ax,[si+02]                 ds:[0060]=A1AB         EAX:0000B5B5 EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A8 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001020  mov  es:[bx+0284],ax            es:[0294]=AA41         EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A8 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001025  stosw                                                  EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000A8 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:0000005E EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0004         EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0027         EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00000D80 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000A1AB EBX:00000010 ECX:00000009 EDX:00001B00 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000A1AB EBX:00000010 ECX:00000008 EDX:00001B00 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (down)                 EAX:0000A1AB EBX:00000010 ECX:00000008 EDX:00001B00 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FF6  shl  dx,1                                              EAX:0000A1AB EBX:00000010 ECX:00000008 EDX:00001B00 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FF8  dec  cx                                                EAX:0000A1AB EBX:00000010 ECX:00000008 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FF9  jne  00000FFF ($+4)             (down)                 EAX:0000A1AB EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FFF  jnc  00001056 ($+55)            (down)                 EAX:0000A1AB EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001056  rol  byte [bp-25],1             ss:[A803]=3FAA         EAX:0000A1AB EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00001059  jc   00001064 ($+9)             (down)                 EAX:0000A1AB EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001064  mov  al,[bp-26]                 ss:[A802]=5570         EAX:0000A1AB EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:00001067  shr  al,04                                             EAX:0000A170 EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000106A  cbw                                                    EAX:0000A107 EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000106B  mov  bx,1441                                           EAX:00000007 EBX:00000010 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000106E  cmp  al,04                                             EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001070  jc   00001087 ($+15)            (no jmp)               EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001072  push cx                                                EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001073  cmp  al,0A                                             EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001075  jc   00001096 ($+1f)            (down)                 EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00001096  sub  al,04                                             EAX:00000007 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00001098  xlat                                                   EAX:00000003 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109A  cbw                                                    EAX:000000E0 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109B  xchg bx,ax                                             EAX:0000FFE0 EBX:00001441 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109C  rol  byte [bp-25],1             ss:[A803]=3F55         EAX:00001441 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000109F  jc   000010AA ($+9)             (no jmp)               EAX:00001441 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010A1  lodsb                                                  EAX:00001441 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000062 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010A2  mov  [bp-26],al                 ss:[A802]=AA70         EAX:00001455 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010A5  and  ax,000F                                           EAX:00001455 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:1 AF:0 PF:1 IF:1
//0FB7:000010A8  jmp  short 000010B1 ($+7)       (down)                 EAX:00000005 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010B1  add  ax,0001                                           EAX:00000005 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010B4  sub  [bp-0C],ax                 ss:[A81C]=0026         EAX:00000006 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:000010B7  inc  ax                                                EAX:00000006 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:000010B8  xchg cx,ax                                             EAX:00000007 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:000010B9  test bx,bx                                             EAX:00000007 EBX:0000FFE0 ECX:00000007 EDX:00003600 ESI:00000063 EDI:000000AA EBP:0000A828 ESP:0000A7F4 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
// end at line 643
}

uint16_t* repetitions = (uint16_t*) &ss[0xA81C];
uint16_t* controlword = &dx;
uint16_t* counter_cx = &cx;

void function0FD8()
{
	*repetitions = *repetitions - 1;
	if (*repetitions == 0)
	{
		// Jump to address 1245, which decodes to video memory
	}

}

bool handlerepetitions(uint16_t* repetitions)
{
	*repetitions = *repetitions - 1;
	return (*repetitions == 0);
}

int handlecontrolword(uint16_t* controlword, uint16_t* counter)
{
	int retval = NO_ACTION;
	if (*controlword & 0x8000)
	{
		*controlword = *controlword << 1;
		retval = CONTROLWORD_ACTION;
	}
	*counter = *counter--;
	if (*counter == 0)
	{
		retval = COUNTER_ACTION;
	}

	return retval;
}

//0FB7:00000FD8  dec  word [bp-0C]               ss:[A81C]=0048         EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FDB  jg   00000FAA ($-33)            (up)                   EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAA  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000D800 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000008 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:0000B000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000007 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FB8  jne  00000FBE ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FBE  jnc  00000FF1 ($+31)            (no jmp)               EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC0  shl  dx,1                                              EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:00006000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC2  dec  cx                                                EAX:0000DEBC EBX:0000FFF8 ECX:00000006 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:1 OF:1 AF:1 PF:1 IF:1
//0FB7:00000FC3  jne  00000FC9 ($+4)             (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FC9  jnc  0000100E ($+43)            (down)                 EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0002         EAX:0000DEBC EBX:0000FFF8 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001011  shl  bx,1                                              EAX:0000DEBC EBX:00000002 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00001013  shl  bx,1                                              EAX:0000DEBC EBX:00000004 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001015  mov  ax,[si]                    ds:[0051]=E3E3         EAX:0000DEBC EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001017  mov  es:[bx+0282],ax            es:[028A]=1D11         EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101C  stosw                                                  EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000026 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:0000101D  mov  ax,[si+02]                 ds:[0053]=E2E2         EAX:0000E3E3 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001020  mov  es:[bx+0284],ax            es:[028C]=2E11         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001025  stosw                                                  EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:00000028 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000051 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:1
//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0002         EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:0000102C  jmp  short 00000FD8 ($-56)      (up)                   EAX:0000E2E2 EBX:00000008 ECX:00000005 EDX:0000C000 ESI:00000055 EDI:0000002A EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1

void function0000100E()
{
	//0FB7:0000100E  mov  bx,[bp-1E]                 ss:[A80A]=0000         EAX:00000050 EBX:0000143F ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	bx = getw(ss, 0xA80A);
	//0FB7:00001011  shl  bx,1                                              EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	shl(&bx, 1);
	//0FB7:00001013  shl  bx,1                                              EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	shl(&bx, 1);
	//0FB7:00001015  mov  ax,[si]                    ds:[0048]=EFCD         EAX:00000050 EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	ax = readword(si);
	//0FB7:00001017  mov  es:[bx+0282],ax            es:[0282]=5151         EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	writeword(bx + 0x0282, ax);
	//0FB7:0000101C  stosw                                                  EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	stosw();
	//0FB7:0000101D  mov  ax,[si+02]                 ds:[004A]=DEBC         EAX:0000EFCD EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	ax = readword(si + 0x02);
	//0FB7:00001020  mov  es:[bx+0284],ax            es:[0284]=AA51         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	writeword(bx + 0x0284, ax);
	//0FB7:00001025  stosw                                                  EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000004 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	stosw();
	//0FB7:00001026  add  si,[bp-16]                 ss:[A812]=0004         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:00000048 EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:1 SF:0 OF:0 AF:1 PF:1 IF:1
	si += getw(ss, 0xA812);
	//0FB7:00001029  inc  byte [bp-1E]               ss:[A80A]=0000         EAX:0000DEBC EBX:00000000 ECX:0000000D EDX:0000C6C0 ESI:0000004C EDI:00000006 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:0 IF:1
	incb(ss, 0xA80A, 1);
}

void function000010C2()
{
	while (cx)
	{
		ax = getw(es, bx + di);
		stosw();
		ax = getw(es, bx + di);
		stosw();
		--cx;
	}
}

void function00001127()
{
	function000010C2();
}

//0FB7:00001127  mov  ax,es:[bx+di]              [illegal]              EAX:00001441 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112A  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000046 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112B  mov  ax,es:[bx+di]              [illegal]              EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000048 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112E  stosw                                                  EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:00000048 EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1
//0FB7:0000112F  loop 00001127 ($-a)                                    EAX:0000E0E0 EBX:0000FFF8 ECX:00000018 EDX:0000C1B0 ESI:0000005E EDI:0000004A EBP:0000A828 ESP:0000A7F2 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:0 PF:0 IF:1


//0FB7:00000FAA  shl  dx,1                                              EAX:00000050 EBX:0000143F ECX:00000010 EDX:0000D8D8 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:0 ZF:0 SF:0 OF:0 AF:0 PF:1 IF:1
//0FB7:00000FAC  dec  cx                                                EAX:00000050 EBX:0000143F ECX:00000010 EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:1 OF:0 AF:1 PF:0 IF:1
//0FB7:00000FAD  jne  00000FB3 ($+4)             (down)                 EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB3  jnc  00000FF6 ($+41)            (no jmp)               EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB5  shl  dx,1                                              EAX:00000050 EBX:0000143F ECX:0000000F EDX:0000B1B0 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:1
//0FB7:00000FB7  dec  cx                                                EAX:00000050 EBX:0000143F ECX:0000000F EDX:00006360 ESI:00000048 EDI:00000002 EBP:0000A828 ESP:0000A7F6 DS:582F ES:0FB7 FS:0000 GS:0000 SS:1720 CF:1 ZF:0 SF:0 OF:1 AF:1 PF:1 IF:1


void handlecontrolword()
{
	//seg001:0FAA
	//seg001:0FAA 0FAA:                              ; CODE XREF: sub_1F0B9+72j
SEG001_0FAA:
	shl(&dx, 1);
	cx--;
	if (cx != 0)
		goto SEG001_0FB3;
	lodsw();
	xchg(&ax, &dx);
	*cl = 0x10;
	//seg001:0FAA                 shl     dx, 1
	//seg001:0FAC                 dec     cx
	//seg001:0FAD                 jnz     short 0FB3
	//seg001:0FAF                 lodsw
	//seg001:0FB0                 xchg    ax, dx
	//seg001:0FB1                 mov     cl, 10h
	//seg001:0FB3

SEG001_0FB3:
	if (!carry)
		goto SEG001_0FF6;
	shl(&dx, 1);
	cx--;
	if (cx)
		goto SEG001_0FBE;

	lodsw();
	xchg(&ax, &dx);
	*cl = 0x10;

	//seg001:0FB3 0FB3:                              ; CODE XREF: sub_1F0B9+44j
	//seg001:0FB3                 jnb     short 0FF6
	//seg001:0FB5                 shl     dx, 1
	//seg001:0FB7                 dec     cx
	//seg001:0FB8                 jnz     short 0FBE
	//seg001:0FBA                 lodsw
	//seg001:0FBB                 xchg    ax, dx
	//seg001:0FBC                 mov     cl, 10h
	//seg001:0FBE

SEG001_0FBE:
	if (!carry)
		goto SEG001_0FF1;
	shl(&dx, 1);
	cx--;
	if (cx)
		goto SEG001_0FC9;
	lodsw();
	xchg(&ax, &dx);
	*cl = 0x10;
	//seg001:0FBE 0FBE:                              ; CODE XREF: sub_1F0B9+4Fj
	//seg001:0FBE                 jnb     short 0FF1
	//seg001:0FC0                 shl     dx, 1
	//seg001:0FC2                 dec     cx
	//seg001:0FC3                 jnz     short 0FC9
	//seg001:0FC5                 lodsw
	//seg001:0FC6                 xchg    ax, dx
	//seg001:0FC7                 mov     cl, 10h
	//seg001:0FC9
SEG001_0FC9:
	if (!carry)
		goto SEG001_100E;
	//seg001:0FC9 0FC9:                              ; CODE XREF: sub_1F0B9+5Aj
	shl(&dx, 1);
	cx--;
	if (cx)
		goto SEG001_0FD4;
	lodsw();
	xchg(&ax, &dx);
	*cl = 0x10;
	//seg001:0FC9                 jnb     short 100E
	//seg001:0FCB                 shl     dx, 1
	//seg001:0FCD                 dec     cx
	//seg001:0FCE                 jnz     short 0FD4
	//seg001:0FD0                 lodsw
	//seg001:0FD1                 xchg    ax, dx
	//seg001:0FD2                 mov     cl, 10h
	//seg001:0FD4
SEG001_0FD4:
	if (!carry)
		goto SEG001_102E;
	goto SEG001_1040;
	//seg001:0FD4 0FD4:                              ; CODE XREF: sub_1F0B9+65j
	//seg001:0FD4                 jnb     short 102E
	//seg001:0FD6                 jmp     short 1040
	//seg001:0FD8 ; ---------------------------------------------------------------------------
	//seg001:0FD8

SEG001_0FD8:
	//seg001:0FD8 0FD8:                              ; CODE XREF: sub_1F0B9+8Bj
	//seg001:0FD8                                         ; sub_1F0B9+A3j ...
	//seg001:0FD8                 dec     word ptr [bp-0Ch]
	//seg001:0FDB                 jg      short 0FAA
	//seg001:0FDD                 call    sub_1F395
	//seg001:0FE0                 inc     word ptr [bp-2]
	//seg001:0FE3                 dec     word ptr [bp-12h]
	//seg001:0FE6                 jnz     short loc_1F0F1
	//seg001:0FE8                 mov     bx, [bp-24h]
	//seg001:0FEB                 pop     word ptr cs:[bx]
	//seg001:0FEE                 xor     ax, ax
	//seg001:0FF0                 retn
SEG001_0FF1:
	//seg001:0FF1 ; ---------------------------------------------------------------------------
	//seg001:0FF1
	//seg001:0FF1 0FF1:                              ; CODE XREF: sub_1F0B9:0FBEj
	//seg001:0FF1                 add     di, 4
	//seg001:0FF4                 jmp     short 0FD8
	//seg001:0FF6 ; ---------------------------------------------------------------------------
	//seg001:0FF6

	//seg001:0FF6 0FF6:                              ; CODE XREF: sub_1F0B9:0FB3j
SEG001_0FF6:
	shl(&dx, 1);
	cx--;
	if (cx)
		goto SEG001_0FFF;
	lodsw();
	xchg(&ax, &dx);
	*cl = 0x10;
	//seg001:0FF6                 shl     dx, 1
	//seg001:0FF8                 dec     cx
	//seg001:0FF9                 jnz     short 0FFF
	//seg001:0FFB                 lodsw
	//seg001:0FFC                 xchg    ax, dx
	//seg001:0FFD                 mov     cl, 10h
	//seg001:0FFF
SEG001_0FFF:
	//seg001:0FFF 0FFF:                              ; CODE XREF: sub_1F0B9+90j
	//seg001:0FFF                 jnb     short 1056
	//seg001:1001                 call    word ptr [bp-22h]
	//seg001:1004                 xchg    ax, bx
	//seg001:1005                 shl     bx, 1
	//seg001:1007                 call    cs:off_1F5BF[bx]
	//seg001:100C                 jmp     short 0FD8
	//seg001:100E ; ---------------------------------------------------------------------------
	//seg001:100E
SEG001_100E:
	//seg001:100E 100E:                              ; CODE XREF: sub_1F0B9:0FC9j
	//seg001:100E                 mov     bx, [bp-1Eh]
	//seg001:1011                 shl     bx, 1
	//seg001:1013                 shl     bx, 1
	//seg001:1015                 mov     ax, [si]
	//seg001:1017                 mov     es:[bx+282h], ax
	//seg001:101C                 stosw
	//seg001:101D                 mov     ax, [si+2]
	//seg001:1020                 mov     es:[bx+284h], ax
	//seg001:1025                 stosw
	//seg001:1026                 add     si, [bp-16h]
	//seg001:1029                 inc     byte ptr [bp-1Eh]
	//seg001:102C                 jmp     short 0FD8
SEG001_102E:
	//seg001:102E ; ---------------------------------------------------------------------------
	//seg001:102E
	//seg001:102E 102E:                              ; CODE XREF: sub_1F0B9:0FD4j
	//seg001:102E                 call    word ptr [bp-22h]
	//seg001:1031                 xchg    ax, bx
	//seg001:1032                 shl     bx, 1
	//seg001:1034                 mov     ax, cs:[bx+144Fh]
	//seg001:1039                 mov     bx, 0FFFCh
	//seg001:103C                 call    ax
	//seg001:103E                 jmp     short 0FD8
SEG001_1040:
	//seg001:1040 ; ---------------------------------------------------------------------------
	//seg001:1040
	//seg001:1040 1040:                              ; CODE XREF: sub_1F0B9+6Dj
	//seg001:1040                 mov     bl, [si]
	//seg001:1042                 inc     si
	//seg001:1043                 xor     bh, bh
	//seg001:1045                 shl     bx, 2
	//seg001:1048                 mov     ax, es:[bx+282h]
	//seg001:104D                 stosw
	//seg001:104E                 mov     ax, es:[bx+284h]
	//seg001:1053                 stosw
	//seg001:1054                 jmp     short 0FD8
SEG001_1056:
	//seg001:1056 ; ---------------------------------------------------------------------------
	//seg001:1056
	//seg001:1056 1056:                              ; CODE XREF: sub_1F0B9:0FFFj
	//seg001:1056                 rol     byte ptr [bp-25h], 1
	//seg001:1059                 jb      short 1064
	//seg001:105B                 lodsb
	//seg001:105C                 mov     [bp-26h], al
	//seg001:105F                 and     ax, 0Fh
	//seg001:1062                 jmp     short 106B
SEG001_1064:
	//seg001:1064 ; ---------------------------------------------------------------------------
	//seg001:1064
	//seg001:1064 1064:                              ; CODE XREF: sub_1F0B9+F0j
	//seg001:1064                 mov     al, [bp-26h]
	//seg001:1067                 shr     al, 4
	//seg001:106A                 cbw
	//seg001:106B

SEG001_106B:
	//seg001:106B 106B:                              ; CODE XREF: sub_1F0B9+F9j
	//seg001:106B                 mov     bx, 1441h
	//seg001:106E                 cmp     al, 4
	//seg001:1070                 jb      short loc_1F1D7
	//seg001:1072                 push    cx
	//seg001:1073                 cmp     al, 0Ah
	//seg001:1075                 jb      short loc_1F1E6
	//seg001:1077                 sub     al, 0Ah
	//seg001:1079                 mov     cx, [bp-0Ch]
	//seg001:107C                 mov     word ptr [bp-0Ch], 1
	//seg001:1081                 xlat    byte ptr cs:[bx]
	//seg001:1083                 cbw
	//seg001:1084                 xchg    ax, bx
	//seg001:1085                 jmp     short loc_1F209
}

/*
seg001:0FAA
seg001:0FAA 0FAA:                              ; CODE XREF: sub_1F0B9+72j
seg001:0FAA                 shl     dx, 1
seg001:0FAC                 dec     cx
seg001:0FAD                 jnz     short 0FB3
seg001:0FAF                 lodsw
seg001:0FB0                 xchg    ax, dx
seg001:0FB1                 mov     cl, 10h
seg001:0FB3
seg001:0FB3 0FB3:                              ; CODE XREF: sub_1F0B9+44j
seg001:0FB3                 jnb     short 0FF6
seg001:0FB5                 shl     dx, 1
seg001:0FB7                 dec     cx
seg001:0FB8                 jnz     short 0FBE
seg001:0FBA                 lodsw
seg001:0FBB                 xchg    ax, dx
seg001:0FBC                 mov     cl, 10h
seg001:0FBE
seg001:0FBE 0FBE:                              ; CODE XREF: sub_1F0B9+4Fj
seg001:0FBE                 jnb     short 0FF1
seg001:0FC0                 shl     dx, 1
seg001:0FC2                 dec     cx
seg001:0FC3                 jnz     short 0FC9
seg001:0FC5                 lodsw
seg001:0FC6                 xchg    ax, dx
seg001:0FC7                 mov     cl, 10h
seg001:0FC9
seg001:0FC9 0FC9:                              ; CODE XREF: sub_1F0B9+5Aj
seg001:0FC9                 jnb     short 100E
seg001:0FCB                 shl     dx, 1
seg001:0FCD                 dec     cx
seg001:0FCE                 jnz     short 0FD4
seg001:0FD0                 lodsw
seg001:0FD1                 xchg    ax, dx
seg001:0FD2                 mov     cl, 10h
seg001:0FD4
seg001:0FD4 0FD4:                              ; CODE XREF: sub_1F0B9+65j
seg001:0FD4                 jnb     short 102E
seg001:0FD6                 jmp     short 1040
seg001:0FD8 ; ---------------------------------------------------------------------------
seg001:0FD8
seg001:0FD8 0FD8:                              ; CODE XREF: sub_1F0B9+8Bj
seg001:0FD8                                         ; sub_1F0B9+A3j ...
seg001:0FD8                 dec     word ptr [bp-0Ch]
seg001:0FDB                 jg      short 0FAA
seg001:0FDD                 call    sub_1F395
seg001:0FE0                 inc     word ptr [bp-2]
seg001:0FE3                 dec     word ptr [bp-12h]
seg001:0FE6                 jnz     short loc_1F0F1
seg001:0FE8                 mov     bx, [bp-24h]
seg001:0FEB                 pop     word ptr cs:[bx]
seg001:0FEE                 xor     ax, ax
seg001:0FF0                 retn
seg001:0FF1 ; ---------------------------------------------------------------------------
seg001:0FF1
seg001:0FF1 0FF1:                              ; CODE XREF: sub_1F0B9:0FBEj
seg001:0FF1                 add     di, 4
seg001:0FF4                 jmp     short 0FD8
seg001:0FF6 ; ---------------------------------------------------------------------------
seg001:0FF6
seg001:0FF6 0FF6:                              ; CODE XREF: sub_1F0B9:0FB3j
seg001:0FF6                 shl     dx, 1
seg001:0FF8                 dec     cx
seg001:0FF9                 jnz     short 0FFF
seg001:0FFB                 lodsw
seg001:0FFC                 xchg    ax, dx
seg001:0FFD                 mov     cl, 10h
seg001:0FFF
seg001:0FFF 0FFF:                              ; CODE XREF: sub_1F0B9+90j
seg001:0FFF                 jnb     short 1056
seg001:1001                 call    word ptr [bp-22h]
seg001:1004                 xchg    ax, bx
seg001:1005                 shl     bx, 1
seg001:1007                 call    cs:off_1F5BF[bx]
seg001:100C                 jmp     short 0FD8
seg001:100E ; ---------------------------------------------------------------------------
seg001:100E
seg001:100E 100E:                              ; CODE XREF: sub_1F0B9:0FC9j
seg001:100E                 mov     bx, [bp-1Eh]
seg001:1011                 shl     bx, 1
seg001:1013                 shl     bx, 1
seg001:1015                 mov     ax, [si]
seg001:1017                 mov     es:[bx+282h], ax
seg001:101C                 stosw
seg001:101D                 mov     ax, [si+2]
seg001:1020                 mov     es:[bx+284h], ax
seg001:1025                 stosw
seg001:1026                 add     si, [bp-16h]
seg001:1029                 inc     byte ptr [bp-1Eh]
seg001:102C                 jmp     short 0FD8
seg001:102E ; ---------------------------------------------------------------------------
seg001:102E
seg001:102E 102E:                              ; CODE XREF: sub_1F0B9:0FD4j
seg001:102E                 call    word ptr [bp-22h]
seg001:1031                 xchg    ax, bx
seg001:1032                 shl     bx, 1
seg001:1034                 mov     ax, cs:[bx+144Fh]
seg001:1039                 mov     bx, 0FFFCh
seg001:103C                 call    ax
seg001:103E                 jmp     short 0FD8
seg001:1040 ; ---------------------------------------------------------------------------
seg001:1040
seg001:1040 1040:                              ; CODE XREF: sub_1F0B9+6Dj
seg001:1040                 mov     bl, [si]
seg001:1042                 inc     si
seg001:1043                 xor     bh, bh
seg001:1045                 shl     bx, 2
seg001:1048                 mov     ax, es:[bx+282h]
seg001:104D                 stosw
seg001:104E                 mov     ax, es:[bx+284h]
seg001:1053                 stosw
seg001:1054                 jmp     short 0FD8
seg001:1056 ; ---------------------------------------------------------------------------
seg001:1056
seg001:1056 1056:                              ; CODE XREF: sub_1F0B9:0FFFj
seg001:1056                 rol     byte ptr [bp-25h], 1
seg001:1059                 jb      short 1064
seg001:105B                 lodsb
seg001:105C                 mov     [bp-26h], al
seg001:105F                 and     ax, 0Fh
seg001:1062                 jmp     short 106B
seg001:1064 ; ---------------------------------------------------------------------------
seg001:1064
seg001:1064 1064:                              ; CODE XREF: sub_1F0B9+F0j
seg001:1064                 mov     al, [bp-26h]
seg001:1067                 shr     al, 4
seg001:106A                 cbw
seg001:106B
seg001:106B 106B:                              ; CODE XREF: sub_1F0B9+F9j
seg001:106B                 mov     bx, 1441h
seg001:106E                 cmp     al, 4
seg001:1070                 jb      short loc_1F1D7
seg001:1072                 push    cx
seg001:1073                 cmp     al, 0Ah
seg001:1075                 jb      short loc_1F1E6
seg001:1077                 sub     al, 0Ah
seg001:1079                 mov     cx, [bp-0Ch]
seg001:107C                 mov     word ptr [bp-0Ch], 1
seg001:1081                 xlat    byte ptr cs:[bx]
seg001:1083                 cbw
seg001:1084                 xchg    ax, bx
seg001:1085                 jmp     short loc_1F209
*/

/*
seg001:0001 ; ---------------------------------------------------------------------------
seg001:0001
seg001:0001 ; Segment type: Pure code
seg001:0001 seg001          segment byte public 'CODE' use16
seg001:0001                 assume cs:seg001
seg001:0001                 ;org 1
seg001:0001                 assume es:nothing, ss:nothing, ds:dseg, fs:nothing, gs:nothing
seg001:0001                 db 0BFCh dup(0)
seg001:0BFD word_1ED4D      dw 0                    ; DATA XREF: sub_1ED91+14w
seg001:0BFD                                         ; sub_1EDC1+23r ...
seg001:0BFF word_1ED4F      dw 1E0h                 ; DATA XREF: sub_1ED91+25w
seg001:0BFF                                         ; sub_1EF9D+62r
seg001:0C01 word_1ED51      dw 1E0h                 ; DATA XREF: seg001:0C2Dw
seg001:0C01                                         ; sub_1ED91+28w ...
seg001:0C03 word_1ED53      dw 50h                  ; DATA XREF: sub_1ED91+1Ew
seg001:0C03                                         ; sub_1EF9D+3Er
seg001:0C05 word_1ED55      dw 0                    ; DATA XREF: seg001:0C3Aw
seg001:0C05                                         ; sub_1ED91+9w ...
seg001:0C07                 db 50h, 0, 50h, 0, 50h, 0, 40h, 1, 0E0h, 1, 90h, 1, 90h
seg001:0C07                 db 1, 90h, 1, 5 dup(0), 4 dup(8), 4 dup(1), 3 dup(9)
seg001:0C27 ; ---------------------------------------------------------------------------
seg001:0C27                 push    bp
seg001:0C28                 mov     bp, sp
seg001:0C2A                 mov     ax, [bp+6]
seg001:0C2D                 xchg    ax, cs:word_1ED51
seg001:0C32                 pop     bp
seg001:0C33                 retf
seg001:0C34 ; ---------------------------------------------------------------------------
seg001:0C34                 push    bp
seg001:0C35                 mov     bp, sp
seg001:0C37                 mov     ax, [bp+6]
seg001:0C3A                 xchg    ax, cs:word_1ED55
seg001:0C3F                 pop     bp
seg001:0C40                 retf
seg001:0C41
seg001:0C41 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0C41
seg001:0C41 ; Attributes: bp-based frame
seg001:0C41
seg001:0C41 sub_1ED91       proc far                ; CODE XREF: sub_10275+173P
seg001:0C41
seg001:0C41 arg_0           = word ptr  6
seg001:0C41 arg_2           = word ptr  8
seg001:0C41
seg001:0C41                 push    bp
seg001:0C42                 mov     bp, sp
seg001:0C44                 push    ds
seg001:0C45                 push    cs
seg001:0C46                 pop     ds
seg001:0C47                 assume ds:seg001
seg001:0C47                 mov     ax, [bp+arg_2]
seg001:0C4A                 mov     word_1ED55, ax
seg001:0C4D                 mov     ax, [bp+arg_0]
seg001:0C50                 cmp     ax, 3
seg001:0C53                 ja      short loc_1EDBE
seg001:0C55                 mov     word_1ED4D, ax
seg001:0C58                 xchg    ax, bx
seg001:0C59                 shl     bx, 1
seg001:0C5B                 mov     ax, [bx+0C07h]
seg001:0C5F                 mov     word_1ED53, ax
seg001:0C62                 mov     ax, [bx+0C0Fh]
seg001:0C66                 mov     word_1ED4F, ax
seg001:0C69                 mov     word_1ED51, ax
seg001:0C6C                 xor     ax, ax
seg001:0C6E
seg001:0C6E loc_1EDBE:                              ; CODE XREF: sub_1ED91+12j
seg001:0C6E                 pop     ds
seg001:0C6F                 assume ds:dseg
seg001:0C6F                 pop     bp
seg001:0C70                 retf
seg001:0C70 sub_1ED91       endp
seg001:0C70
seg001:0C71
seg001:0C71 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0C71
seg001:0C71 ; Attributes: bp-based frame
seg001:0C71
seg001:0C71 sub_1EDC1       proc far                ; CODE XREF: sub_16954+1BP
seg001:0C71                                         ; sub_16DE4+39P
seg001:0C71
seg001:0C71 arg_0           = dword ptr  6
seg001:0C71 arg_4           = word ptr  0Ah
seg001:0C71 arg_6           = word ptr  0Ch
seg001:0C71
seg001:0C71                 push    bp
seg001:0C72                 mov     bp, sp
seg001:0C74                 push    si
seg001:0C75                 push    di
seg001:0C76                 push    ds
seg001:0C77                 mov     bl, 1
seg001:0C79                 mov     cx, [bp+arg_4]
seg001:0C7C                 push    ds
seg001:0C7D                 lds     si, [bp+arg_0]
seg001:0C80                 call    sub_1EE57
seg001:0C83                 pop     es
seg001:0C84                 test    al, al
seg001:0C86                 jnz     short loc_1EE05
seg001:0C88                 lodsw
seg001:0C89                 mov     di, [bp+arg_6]
seg001:0C8C                 call    sub_1EE0D
seg001:0C8F                 call    sub_1EE0D
seg001:0C92                 push    es
seg001:0C93                 pop     ds
seg001:0C94                 mov     dx, cs:word_1ED4D
seg001:0C99                 cmp     dx, 2
seg001:0C9C                 jb      short loc_1EDFF
seg001:0C9E                 test    word ptr [di-6], 1
seg001:0CA3                 jz      short loc_1EDFC
seg001:0CA5                 inc     word ptr [di-6]
seg001:0CA8                 dec     word ptr [di-2]
seg001:0CAB                 dec     ax
seg001:0CAC
seg001:0CAC loc_1EDFC:                              ; CODE XREF: sub_1EDC1+32j
seg001:0CAC                 inc     ax
seg001:0CAD                 shr     ax, 1
seg001:0CAF
seg001:0CAF loc_1EDFF:                              ; CODE XREF: sub_1EDC1+2Bj
seg001:0CAF                 shr     cx, 1
seg001:0CB1                 mul     cx
seg001:0CB3                 jmp     short loc_1EE08
seg001:0CB5 ; ---------------------------------------------------------------------------
seg001:0CB5
seg001:0CB5 loc_1EE05:                              ; CODE XREF: sub_1EDC1+15j
seg001:0CB5                 xor     ax, ax
seg001:0CB7                 cwd
seg001:0CB8
seg001:0CB8 loc_1EE08:                              ; CODE XREF: sub_1EDC1+42j
seg001:0CB8                 pop     ds
seg001:0CB9                 pop     di
seg001:0CBA                 pop     si
seg001:0CBB                 pop     bp
seg001:0CBC                 retf
seg001:0CBC sub_1EDC1       endp
seg001:0CBC
seg001:0CBD
seg001:0CBD ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0CBD
seg001:0CBD
seg001:0CBD sub_1EE0D       proc near               ; CODE XREF: sub_1EDC1+1Bp
seg001:0CBD                                         ; sub_1EDC1+1Ep
seg001:0CBD                 mov     al, [si+1]
seg001:0CC0                 and     ax, 0FEh
seg001:0CC3                 shl     ax, 2
seg001:0CC6                 stosw
seg001:0CC7                 xchg    ax, cx
seg001:0CC8                 lodsw
seg001:0CC9                 and     ax, 1FFh
seg001:0CCC                 stosw
seg001:0CCD                 retn
seg001:0CCD sub_1EE0D       endp
seg001:0CCD
seg001:0CCE
seg001:0CCE ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0CCE
seg001:0CCE
seg001:0CCE sub_1EE1E       proc far                ; CODE XREF: sub_10B3A+42P
seg001:0CCE                                         ; sub_10B3A+66P ...
seg001:0CCE                 mov     ax, 8
seg001:0CD1                 jmp     short loc_1EE25
seg001:0CD1 sub_1EE1E       endp
seg001:0CD1
seg001:0CD3
seg001:0CD3 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0CD3
seg001:0CD3 ; Attributes: bp-based frame
seg001:0CD3
seg001:0CD3 sub_1EE23       proc far                ; CODE XREF: sub_1093D+1BP
seg001:0CD3                                         ; sub_109D9+5CP ...
seg001:0CD3
seg001:0CD3 arg_2           = word ptr  6
seg001:0CD3 arg_4           = dword ptr  8
seg001:0CD3 arg_8           = word ptr  0Ch
seg001:0CD3 arg_A           = word ptr  0Eh
seg001:0CD3 arg_C           = word ptr  10h
seg001:0CD3 arg_E           = dword ptr  12h
seg001:0CD3 arg_12          = word ptr  16h
seg001:0CD3
seg001:0CD3                 xor     ax, ax
seg001:0CD5
seg001:0CD5 loc_1EE25:                              ; CODE XREF: sub_1EE1E+3j
seg001:0CD5                 push    bp
seg001:0CD6                 mov     bp, sp
seg001:0CD8                 push    si
seg001:0CD9                 push    di
seg001:0CDA                 push    ds
seg001:0CDB                 or      [bp+arg_C], ax
seg001:0CDE                 lds     si, [bp+arg_4]
seg001:0CE1                 mov     cx, [bp+arg_2]
seg001:0CE4                 mov     bx, [bp+arg_C]
seg001:0CE7                 call    sub_1EE57
seg001:0CEA                 test    al, al
seg001:0CEC                 jnz     short loc_1EE50
seg001:0CEE                 mov     cx, [bp+arg_8]
seg001:0CF1                 mov     dx, [bp+arg_A]
seg001:0CF4                 mov     ax, [bp+arg_C]
seg001:0CF7                 les     di, [bp+arg_E]
seg001:0CFA                 mov     bx, [bp+arg_12]
seg001:0CFD                 call    sub_1EEF6
seg001:0D00
seg001:0D00 loc_1EE50:                              ; CODE XREF: sub_1EE23+19j
seg001:0D00                 xor     ah, ah
seg001:0D02                 pop     ds
seg001:0D03                 pop     di
seg001:0D04                 pop     si
seg001:0D05                 leave
seg001:0D06                 retf
seg001:0D06 sub_1EE23       endp ; sp =  2
seg001:0D06
seg001:0D07
seg001:0D07 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0D07
seg001:0D07
seg001:0D07 sub_1EE57       proc near               ; CODE XREF: sub_1EDC1+Fp
seg001:0D07                                         ; sub_1EE23+14p
seg001:0D07                 cmp     word ptr [si], 4347h
seg001:0D0B                 jz      short loc_1EE60
seg001:0D0D                 mov     al, 1
seg001:0D0F                 retn
seg001:0D10 ; ---------------------------------------------------------------------------
seg001:0D10
seg001:0D10 loc_1EE60:                              ; CODE XREF: sub_1EE57+4j
seg001:0D10                 cmp     byte ptr [si+2], 0
seg001:0D14                 jz      short loc_1EE69
seg001:0D16                 mov     al, 3
seg001:0D18                 retn
seg001:0D19 ; ---------------------------------------------------------------------------
seg001:0D19
seg001:0D19 loc_1EE69:                              ; CODE XREF: sub_1EE57+Dj
seg001:0D19                 cmp     byte ptr [si+3], 2
seg001:0D1D                 jz      short loc_1EE72
seg001:0D1F                 mov     al, 4
seg001:0D21                 retn
seg001:0D22 ; ---------------------------------------------------------------------------
seg001:0D22
seg001:0D22 loc_1EE72:                              ; CODE XREF: sub_1EE57+16j
seg001:0D22                 test    byte ptr [si+4], 80h
seg001:0D26                 jz      short loc_1EEA1
seg001:0D28                 cmp     byte ptr ss:5E11h, 0
seg001:0D2E                 jnz     short loc_1EEA1
seg001:0D30                 push    si
seg001:0D31                 push    es
seg001:0D32                 push    di
seg001:0D33                 push    cx
seg001:0D34                 add     si, 10h
seg001:0D37                 push    si
seg001:0D38                 mov     di, 5846h
seg001:0D3B                 push    ss
seg001:0D3C                 pop     es
seg001:0D3D                 mov     cx, 10h
seg001:0D40                 rep movsw
seg001:0D42                 pop     si
seg001:0D43                 test    bl, 1
seg001:0D46                 jnz     short loc_1EE9D
seg001:0D48                 call    sub_1C0B5
seg001:0D4D
seg001:0D4D loc_1EE9D:                              ; CODE XREF: sub_1EE57+3Fj
seg001:0D4D                 pop     cx
seg001:0D4E                 pop     di
seg001:0D4F                 pop     es
seg001:0D50                 pop     si
seg001:0D51
seg001:0D51 loc_1EEA1:                              ; CODE XREF: sub_1EE57+1Fj
seg001:0D51                                         ; sub_1EE57+27j
seg001:0D51                 dec     cx
seg001:0D52                 cmp     cx, [si+8]
seg001:0D55                 jb      short loc_1EEAA
seg001:0D57                 mov     al, 2
seg001:0D59                 retn
seg001:0D5A ; ---------------------------------------------------------------------------
seg001:0D5A
seg001:0D5A loc_1EEAA:                              ; CODE XREF: sub_1EE57+4Ej
seg001:0D5A                 shl     cx, 2
seg001:0D5D                 add     cx, [si+6]
seg001:0D60                 add     cx, si
seg001:0D62                 mov     bx, cx
seg001:0D64                 mov     ax, [bx]
seg001:0D66                 mov     dx, [bx+2]
seg001:0D69                 add     si, ax
seg001:0D6B                 adc     dx, 0
seg001:0D6E                 ror     dx, 4
seg001:0D71                 mov     ax, ds
seg001:0D73                 add     ax, dx
seg001:0D75                 mov     ds, ax
seg001:0D77                 xor     ax, ax
seg001:0D79                 retn
seg001:0D79 sub_1EE57       endp
seg001:0D79
seg001:0D7A ; ---------------------------------------------------------------------------
seg001:0D7A                 mov     ax, 8
seg001:0D7D                 jmp     short loc_1EED1
seg001:0D7F ; ---------------------------------------------------------------------------
seg001:0D7F                 xor     ax, ax
seg001:0D81
seg001:0D81 loc_1EED1:                              ; CODE XREF: seg001:0D7Dj
seg001:0D81                 push    bp
seg001:0D82                 mov     bp, sp
seg001:0D84                 push    ds
seg001:0D85                 push    si
seg001:0D86                 push    di
seg001:0D87                 or      [bp+0Eh], ax
seg001:0D8A                 mov     ax, [bp+0Eh]
seg001:0D8D                 mov     cx, [bp+0Ah]
seg001:0D90                 mov     dx, [bp+0Ch]
seg001:0D93                 lds     si, [bp+6]
seg001:0D96                 les     di, [bp+10h]
seg001:0D99                 mov     bx, [bp+14h]
seg001:0D9C                 call    sub_1EEF6
seg001:0D9F                 xor     ah, ah
seg001:0DA1                 pop     di
seg001:0DA2                 pop     si
seg001:0DA3                 pop     ds
seg001:0DA4                 leave
seg001:0DA5                 retf
seg001:0DA6
seg001:0DA6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0DA6
seg001:0DA6 ; Attributes: bp-based frame
seg001:0DA6
seg001:0DA6 sub_1EEF6       proc near               ; CODE XREF: sub_1EE23+2Ap
seg001:0DA6                                         ; seg001:0D9Cp
seg001:0DA6
seg001:0DA6 var_20          = word ptr -20h
seg001:0DA6 var_18          = word ptr -18h
seg001:0DA6 var_14          = word ptr -14h
seg001:0DA6 var_A           = word ptr -0Ah
seg001:0DA6 var_8           = word ptr -8
seg001:0DA6 var_4           = word ptr -4
seg001:0DA6 var_2           = word ptr -2
seg001:0DA6
seg001:0DA6                 enter   26h, 0
seg001:0DAA                 push    si
seg001:0DAB                 push    di
seg001:0DAC                 push    es
seg001:0DAD                 push    ds
seg001:0DAE                 mov     [bp+var_8], es
seg001:0DB1                 mov     [bp+var_A], di
seg001:0DB4                 mov     [bp+var_20], ax
seg001:0DB7                 mov     [bp+var_2], dx
seg001:0DBA                 mov     [bp+var_4], cx
seg001:0DBD                 shr     bx, 1
seg001:0DBF                 cmp     cs:word_1ED4D, 3
seg001:0DC5                 jz      short loc_1EF1A
seg001:0DC7                 shr     bx, 2
seg001:0DCA
seg001:0DCA loc_1EF1A:                              ; CODE XREF: sub_1EEF6+1Fj
seg001:0DCA                 mov     [bp+var_14], bx
seg001:0DCD                 push    cs
seg001:0DCE                 pop     es
seg001:0DCF                 assume es:seg001
seg001:0DCF                 test    al, 4
seg001:0DD1                 jz      short loc_1EF32
seg001:0DD3                 cmp     word ptr [si+8], 2
seg001:0DD7                 mov     al, 1
seg001:0DD9                 jnb     short loc_1EF51
seg001:0DDB                 call    sub_1EF59
seg001:0DDE                 mov     al, 5
seg001:0DE0                 jnz     short loc_1EF51
seg001:0DE2
seg001:0DE2 loc_1EF32:                              ; CODE XREF: sub_1EEF6+2Bj
seg001:0DE2                 lodsw
seg001:0DE3                 mov     [bp+var_18], ax
seg001:0DE6                 and     al, 0F0h
seg001:0DE8                 cmp     al, 0A0h ; 'á'
seg001:0DEA                 mov     al, 1
seg001:0DEC                 jnz     short loc_1EF51
seg001:0DEE                 call    sub_1EF9D
seg001:0DF1                 jb      short loc_1EF51
seg001:0DF3                 test    byte ptr [bp+var_18], 4
seg001:0DF7                 jz      short loc_1EF4E
seg001:0DF9                 call    sub_1F0B9
seg001:0DFC                 jmp     short loc_1EF51
seg001:0DFE ; ---------------------------------------------------------------------------
seg001:0DFE
seg001:0DFE loc_1EF4E:                              ; CODE XREF: sub_1EEF6+51j
seg001:0DFE                 call    sub_1F047
seg001:0E01
seg001:0E01 loc_1EF51:                              ; CODE XREF: sub_1EEF6+33j
seg001:0E01                                         ; sub_1EEF6+3Aj ...
seg001:0E01                 xor     ah, ah
seg001:0E03                 pop     ds
seg001:0E04                 pop     es
seg001:0E05                 assume es:nothing
seg001:0E05                 pop     di
seg001:0E06                 pop     si
seg001:0E07                 leave
seg001:0E08                 retn
seg001:0E08 sub_1EEF6       endp
seg001:0E08
seg001:0E09
seg001:0E09 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0E09
seg001:0E09
seg001:0E09 sub_1EF59       proc near               ; CODE XREF: sub_1EEF6+35p
seg001:0E09                 push    si
seg001:0E0A                 push    ds
seg001:0E0B                 mov     dx, [si+6]
seg001:0E0E                 mov     di, [si+8]
seg001:0E11                 xor     bx, bx
seg001:0E13                 add     dx, 0Ah
seg001:0E16                 adc     di, bx
seg001:0E18
seg001:0E18 loc_1EF68:                              ; CODE XREF: sub_1EF59+30j
seg001:0E18                                         ; sub_1EF59+35j ...
seg001:0E18                 mov     cx, 8000h
seg001:0E1B                 test    di, di
seg001:0E1D                 jnz     short loc_1EF75
seg001:0E1F                 cmp     dx, cx
seg001:0E21                 jnb     short loc_1EF75
seg001:0E23                 mov     cx, dx
seg001:0E25
seg001:0E25 loc_1EF75:                              ; CODE XREF: sub_1EF59+14j
seg001:0E25                                         ; sub_1EF59+18j
seg001:0E25                 push    cx
seg001:0E26
seg001:0E26 loc_1EF76:                              ; CODE XREF: sub_1EF59+20j
seg001:0E26                 add     bl, [si]
seg001:0E28                 inc     si
seg001:0E29                 loop    loc_1EF76
seg001:0E2B                 pop     cx
seg001:0E2C                 mov     ax, ds
seg001:0E2E                 add     ax, 800h
seg001:0E31                 mov     ds, ax
seg001:0E33                 assume ds:nothing
seg001:0E33                 sub     si, 8000h
seg001:0E37                 sub     dx, cx
seg001:0E39                 ja      short loc_1EF68
seg001:0E3B                 sbb     di, 0
seg001:0E3E                 jnz     short loc_1EF68
seg001:0E40                 test    dx, dx
seg001:0E42                 jnz     short loc_1EF68
seg001:0E44                 test    bl, bl
seg001:0E46                 pop     ds
seg001:0E47                 assume ds:dseg
seg001:0E47                 pop     si
seg001:0E48                 retn
seg001:0E48 sub_1EF59       endp
seg001:0E48
seg001:0E49 ; ---------------------------------------------------------------------------
seg001:0E49                 mov     al, 6
seg001:0E4B                 stc
seg001:0E4C                 retn
seg001:0E4D
seg001:0E4D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0E4D
seg001:0E4D
seg001:0E4D sub_1EF9D       proc near               ; CODE XREF: sub_1EEF6+48p
seg001:0E4D                 mov     di, 0BF5h
seg001:0E50                 lodsw
seg001:0E51                 and     ax, 1FFh
seg001:0E54                 test    word ptr [bp-20h], 8
seg001:0E59                 jnz     short loc_1EFB4
seg001:0E5B                 cmp     word ptr [bp-2], 0FFFFh
seg001:0E5F                 jz      short loc_1EFB4
seg001:0E61                 mov     ax, [bp-2]
seg001:0E64
seg001:0E64 loc_1EFB4:                              ; CODE XREF: sub_1EF9D+Cj
seg001:0E64                                         ; sub_1EF9D+12j
seg001:0E64                 add     ax, cs:word_1ED55
seg001:0E69                 stosw
seg001:0E6A                 mov     [bp-2], ax
seg001:0E6D                 mov     dx, ax
seg001:0E6F                 mov     al, [si-1]
seg001:0E72                 shr     al, 1
seg001:0E74                 cbw
seg001:0E75                 test    word ptr [bp-20h], 8
seg001:0E7A                 jnz     short loc_1EFD5
seg001:0E7C                 cmp     word ptr [bp-4], 0FFFFh
seg001:0E80                 jz      short loc_1EFD5
seg001:0E82                 mov     ax, [bp-4]
seg001:0E85
seg001:0E85 loc_1EFD5:                              ; CODE XREF: sub_1EF9D+2Dj
seg001:0E85                                         ; sub_1EF9D+33j
seg001:0E85                 stosw
seg001:0E86                 mov     [bp-4], ax
seg001:0E89                 mov     bx, ax
seg001:0E8B                 mov     ax, cs:word_1ED53
seg001:0E8F                 mov     cx, cs:word_1ED4D
seg001:0E94                 cmp     cx, 2
seg001:0E97                 jb      short loc_1EFEC
seg001:0E99                 inc     dx
seg001:0E9A                 shr     dx, 1
seg001:0E9C
seg001:0E9C loc_1EFEC:                              ; CODE XREF: sub_1EF9D+4Aj
seg001:0E9C                 mul     dx
seg001:0E9E                 cmp     cx, 3
seg001:0EA1                 jb      short loc_1EFF6
seg001:0EA3                 shl     bx, 2
seg001:0EA6
seg001:0EA6 loc_1EFF6:                              ; CODE XREF: sub_1EF9D+54j
seg001:0EA6                 add     bx, ax
seg001:0EA8                 mov     [bp-6], bx
seg001:0EAB                 lodsw
seg001:0EAC                 and     ax, 1FFh
seg001:0EAF                 mov     dx, cs:word_1ED4F
seg001:0EB4                 test    word ptr [bp-20h], 8
seg001:0EB9                 jnz     short loc_1F010
seg001:0EBB                 mov     dx, cs:word_1ED51
seg001:0EC0
seg001:0EC0 loc_1F010:                              ; CODE XREF: sub_1EF9D+6Cj
seg001:0EC0                 sub     dx, [bp-2]
seg001:0EC3                 cmp     ax, dx
seg001:0EC5                 jbe     short loc_1F019
seg001:0EC7                 mov     ax, dx
seg001:0EC9
seg001:0EC9 loc_1F019:                              ; CODE XREF: sub_1EF9D+78j
seg001:0EC9                 stosw
seg001:0ECA                 mov     [bp-12h], ax
seg001:0ECD                 mov     al, [si-1]
seg001:0ED0                 shr     al, 1
seg001:0ED2                 cbw
seg001:0ED3                 stosw
seg001:0ED4                 mov     [bp-0Eh], ax
seg001:0ED7                 shl     ax, 3
seg001:0EDA                 mov     [bp-10h], ax
seg001:0EDD                 test    byte ptr [bp-18h], 1
seg001:0EE1                 mov     bx, 1215h
seg001:0EE4                 mov     dx, 3
seg001:0EE7                 jnz     short loc_1F03D
seg001:0EE9                 mov     bx, 1200h
seg001:0EEC                 inc     dx
seg001:0EED
seg001:0EED loc_1F03D:                              ; CODE XREF: sub_1EF9D+9Aj
seg001:0EED                 mov     [bp-16h], dx
seg001:0EF0                 mov     [bp-22h], bx
seg001:0EF3                 lodsw
seg001:0EF4                 lodsw
seg001:0EF5                 clc
seg001:0EF6                 retn
seg001:0EF6 sub_1EF9D       endp
seg001:0EF6
seg001:0EF7
seg001:0EF7 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0EF7
seg001:0EF7
seg001:0EF7 sub_1F047       proc near               ; CODE XREF: sub_1EEF6:loc_1EF4Ep
seg001:0EF7                 mov     ax, 0A000h
seg001:0EFA                 mov     es, ax
seg001:0EFC                 assume es:nothing
seg001:0EFC                 cmp     cs:word_1ED4D, 3
seg001:0F02                 jnb     short loc_1F0B6
seg001:0F04                 mov     dx, 3C4h
seg001:0F07                 mov     al, 2
seg001:0F09                 out     dx, al          ; EGA: sequencer address reg
seg001:0F09                                         ; map mask: data bits 0-3 enable writes to bit planes 0-3
seg001:0F0A                 inc     dx
seg001:0F0B
seg001:0F0B loc_1F05B:                              ; CODE XREF: sub_1F047+67j
seg001:0F0B                 mov     bx, [bp-16h]
seg001:0F0E                 cmp     cs:word_1ED4D, 2
seg001:0F14                 jz      short loc_1F076
seg001:0F16                 test    word ptr [bp-2], 1
seg001:0F1B                 jz      short loc_1F076
seg001:0F1D                 mov     ax, [bp-0Eh]
seg001:0F20                 mul     bx
seg001:0F22                 add     si, ax
seg001:0F24                 jmp     short loc_1F099
seg001:0F26 ; ---------------------------------------------------------------------------
seg001:0F26
seg001:0F26 loc_1F076:                              ; CODE XREF: sub_1F047+1Dj
seg001:0F26                                         ; sub_1F047+24j
seg001:0F26                 mov     al, 1
seg001:0F28
seg001:0F28 loc_1F078:                              ; CODE XREF: sub_1F047+3Dj
seg001:0F28                 out     dx, al          ; EGA port: sequencer data register
seg001:0F29                 mov     cx, [bp-0Eh]
seg001:0F2C                 mov     di, [bp-6]
seg001:0F2F                 rep movsb
seg001:0F31                 shl     al, 1
seg001:0F33                 dec     bx
seg001:0F34                 jnz     short loc_1F078
seg001:0F36                 cmp     al, 8
seg001:0F38                 jnz     short loc_1F095
seg001:0F3A                 out     dx, al          ; EGA port: sequencer data register
seg001:0F3B                 xor     al, al
seg001:0F3D                 mov     cx, [bp-0Eh]
seg001:0F40                 mov     di, [bp-6]
seg001:0F43                 rep stosb
seg001:0F45
seg001:0F45 loc_1F095:                              ; CODE XREF: sub_1F047+41j
seg001:0F45                 add     word ptr [bp-6], 50h ; 'P'
seg001:0F49
seg001:0F49 loc_1F099:                              ; CODE XREF: sub_1F047+2Dj
seg001:0F49                 test    si, si
seg001:0F4B                 jns     short loc_1F0A8
seg001:0F4D                 sub     si, 8000h
seg001:0F51                 mov     ax, ds
seg001:0F53                 add     ax, 800h
seg001:0F56                 mov     ds, ax
seg001:0F58                 assume ds:nothing
seg001:0F58
seg001:0F58 loc_1F0A8:                              ; CODE XREF: sub_1F047+54j
seg001:0F58                 inc     word ptr [bp-2]
seg001:0F5B                 dec     word ptr [bp-12h]
seg001:0F5E                 jnz     short loc_1F05B
seg001:0F60                 mov     al, 0Fh
seg001:0F62                 out     dx, al          ; EGA port: sequencer data register
seg001:0F63                 xor     ax, ax
seg001:0F65                 retn
seg001:0F66 ; ---------------------------------------------------------------------------
seg001:0F66
seg001:0F66 loc_1F0B6:                              ; CODE XREF: sub_1F047+Bj
seg001:0F66                 xor     ax, ax
seg001:0F68                 retn
seg001:0F68 sub_1F047       endp
seg001:0F68
seg001:0F69
seg001:0F69 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:0F69
seg001:0F69
seg001:0F69 sub_1F0B9       proc near               ; CODE XREF: sub_1EEF6+53p
seg001:0F69                 mov     di, 2
seg001:0F6C                 mov     cx, 140h
seg001:0F6F                 xor     ax, ax
seg001:0F71                 rep stosw
seg001:0F73                 mov     word ptr [bp-1Ch], 2
seg001:0F78                 mov     word ptr [bp-1Ah], 140h
seg001:0F7D                 mov     word ptr [bp-1Eh], 0
seg001:0F82                 mov     byte ptr [bp-25h], 55h ; 'U'
seg001:0F86                 mov     bx, [bp-0Eh]
seg001:0F89                 shl     bx, 1
seg001:0F8B                 add     bx, [bp-0Eh]
seg001:0F8E                 add     bx, 134Fh
seg001:0F92                 mov     [bp-24h], bx
seg001:0F95                 push    word ptr cs:[bx]
seg001:0F98                 mov     byte ptr cs:[bx], 0C3h ; '+'
seg001:0F9C                 lodsw
seg001:0F9D                 xchg    ax, dx
seg001:0F9E                 mov     cx, 10h
seg001:0FA1
seg001:0FA1 loc_1F0F1:                              ; CODE XREF: sub_1F0B9+7Dj
seg001:0FA1                 mov     di, [bp-1Ch]
seg001:0FA4                 mov     ax, [bp-0Eh]
seg001:0FA7                 mov     [bp-0Ch], ax
seg001:0FAA
seg001:0FAA loc_1F0FA:                              ; CODE XREF: sub_1F0B9+72j
seg001:0FAA                 shl     dx, 1
seg001:0FAC                 dec     cx
seg001:0FAD                 jnz     short loc_1F103
seg001:0FAF                 lodsw
seg001:0FB0                 xchg    ax, dx
seg001:0FB1                 mov     cl, 10h
seg001:0FB3
seg001:0FB3 loc_1F103:                              ; CODE XREF: sub_1F0B9+44j
seg001:0FB3                 jnb     short loc_1F146
seg001:0FB5                 shl     dx, 1
seg001:0FB7                 dec     cx
seg001:0FB8                 jnz     short loc_1F10E
seg001:0FBA                 lodsw
seg001:0FBB                 xchg    ax, dx
seg001:0FBC                 mov     cl, 10h
seg001:0FBE
seg001:0FBE loc_1F10E:                              ; CODE XREF: sub_1F0B9+4Fj
seg001:0FBE                 jnb     short loc_1F141
seg001:0FC0                 shl     dx, 1
seg001:0FC2                 dec     cx
seg001:0FC3                 jnz     short loc_1F119
seg001:0FC5                 lodsw
seg001:0FC6                 xchg    ax, dx
seg001:0FC7                 mov     cl, 10h
seg001:0FC9
seg001:0FC9 loc_1F119:                              ; CODE XREF: sub_1F0B9+5Aj
seg001:0FC9                 jnb     short loc_1F15E
seg001:0FCB                 shl     dx, 1
seg001:0FCD                 dec     cx
seg001:0FCE                 jnz     short loc_1F124
seg001:0FD0                 lodsw
seg001:0FD1                 xchg    ax, dx
seg001:0FD2                 mov     cl, 10h
seg001:0FD4
seg001:0FD4 loc_1F124:                              ; CODE XREF: sub_1F0B9+65j
seg001:0FD4                 jnb     short loc_1F17E
seg001:0FD6                 jmp     short loc_1F190
seg001:0FD8 ; ---------------------------------------------------------------------------
seg001:0FD8
seg001:0FD8 loc_1F128:                              ; CODE XREF: sub_1F0B9+8Bj
seg001:0FD8                                         ; sub_1F0B9+A3j ...
seg001:0FD8                 dec     word ptr [bp-0Ch]
seg001:0FDB                 jg      short loc_1F0FA
seg001:0FDD                 call    sub_1F395
seg001:0FE0                 inc     word ptr [bp-2]
seg001:0FE3                 dec     word ptr [bp-12h]
seg001:0FE6                 jnz     short loc_1F0F1
seg001:0FE8                 mov     bx, [bp-24h]
seg001:0FEB                 pop     word ptr cs:[bx]
seg001:0FEE                 xor     ax, ax
seg001:0FF0                 retn
seg001:0FF1 ; ---------------------------------------------------------------------------
seg001:0FF1
seg001:0FF1 loc_1F141:                              ; CODE XREF: sub_1F0B9:loc_1F10Ej
seg001:0FF1                 add     di, 4
seg001:0FF4                 jmp     short loc_1F128
seg001:0FF6 ; ---------------------------------------------------------------------------
seg001:0FF6
seg001:0FF6 loc_1F146:                              ; CODE XREF: sub_1F0B9:loc_1F103j
seg001:0FF6                 shl     dx, 1
seg001:0FF8                 dec     cx
seg001:0FF9                 jnz     short loc_1F14F
seg001:0FFB                 lodsw
seg001:0FFC                 xchg    ax, dx
seg001:0FFD                 mov     cl, 10h
seg001:0FFF
seg001:0FFF loc_1F14F:                              ; CODE XREF: sub_1F0B9+90j
seg001:0FFF                 jnb     short loc_1F1A6
seg001:1001                 call    word ptr [bp-22h]
seg001:1004                 xchg    ax, bx
seg001:1005                 shl     bx, 1
seg001:1007                 call    cs:off_1F5BF[bx]
seg001:100C                 jmp     short loc_1F128
seg001:100E ; ---------------------------------------------------------------------------
seg001:100E
seg001:100E loc_1F15E:                              ; CODE XREF: sub_1F0B9:loc_1F119j
seg001:100E                 mov     bx, [bp-1Eh]
seg001:1011                 shl     bx, 1
seg001:1013                 shl     bx, 1
seg001:1015                 mov     ax, [si]
seg001:1017                 mov     es:[bx+282h], ax
seg001:101C                 stosw
seg001:101D                 mov     ax, [si+2]
seg001:1020                 mov     es:[bx+284h], ax
seg001:1025                 stosw
seg001:1026                 add     si, [bp-16h]
seg001:1029                 inc     byte ptr [bp-1Eh]
seg001:102C                 jmp     short loc_1F128
seg001:102E ; ---------------------------------------------------------------------------
seg001:102E
seg001:102E loc_1F17E:                              ; CODE XREF: sub_1F0B9:loc_1F124j
seg001:102E                 call    word ptr [bp-22h]
seg001:1031                 xchg    ax, bx
seg001:1032                 shl     bx, 1
seg001:1034                 mov     ax, cs:[bx+144Fh]
seg001:1039                 mov     bx, 0FFFCh
seg001:103C                 call    ax
seg001:103E                 jmp     short loc_1F128
seg001:1040 ; ---------------------------------------------------------------------------
seg001:1040
seg001:1040 loc_1F190:                              ; CODE XREF: sub_1F0B9+6Dj
seg001:1040                 mov     bl, [si]
seg001:1042                 inc     si
seg001:1043                 xor     bh, bh
seg001:1045                 shl     bx, 2
seg001:1048                 mov     ax, es:[bx+282h]
seg001:104D                 stosw
seg001:104E                 mov     ax, es:[bx+284h]
seg001:1053                 stosw
seg001:1054                 jmp     short loc_1F128
seg001:1056 ; ---------------------------------------------------------------------------
seg001:1056
seg001:1056 loc_1F1A6:                              ; CODE XREF: sub_1F0B9:loc_1F14Fj
seg001:1056                 rol     byte ptr [bp-25h], 1
seg001:1059                 jb      short loc_1F1B4
seg001:105B                 lodsb
seg001:105C                 mov     [bp-26h], al
seg001:105F                 and     ax, 0Fh
seg001:1062                 jmp     short loc_1F1BB
seg001:1064 ; ---------------------------------------------------------------------------
seg001:1064
seg001:1064 loc_1F1B4:                              ; CODE XREF: sub_1F0B9+F0j
seg001:1064                 mov     al, [bp-26h]
seg001:1067                 shr     al, 4
seg001:106A                 cbw
seg001:106B
seg001:106B loc_1F1BB:                              ; CODE XREF: sub_1F0B9+F9j
seg001:106B                 mov     bx, 1441h
seg001:106E                 cmp     al, 4
seg001:1070                 jb      short loc_1F1D7
seg001:1072                 push    cx
seg001:1073                 cmp     al, 0Ah
seg001:1075                 jb      short loc_1F1E6
seg001:1077                 sub     al, 0Ah
seg001:1079                 mov     cx, [bp-0Ch]
seg001:107C                 mov     word ptr [bp-0Ch], 1
seg001:1081                 xlat    byte ptr cs:[bx]
seg001:1083                 cbw
seg001:1084                 xchg    ax, bx
seg001:1085                 jmp     short loc_1F209
seg001:1087 ; ---------------------------------------------------------------------------
seg001:1087
seg001:1087 loc_1F1D7:                              ; CODE XREF: sub_1F0B9+107j
seg001:1087                 xlat    byte ptr cs:[bx]
seg001:1089                 cbw
seg001:108A                 xchg    ax, bx
seg001:108B                 mov     ax, es:[bx+di]
seg001:108E                 stosw
seg001:108F                 mov     ax, es:[bx+di]
seg001:1092                 stosw
seg001:1093                 jmp     loc_1F128
seg001:1096 ; ---------------------------------------------------------------------------
seg001:1096
seg001:1096 loc_1F1E6:                              ; CODE XREF: sub_1F0B9+10Cj
seg001:1096                 sub     al, 4
seg001:1098                 xlat    byte ptr cs:[bx]
seg001:109A                 cbw
seg001:109B                 xchg    ax, bx
seg001:109C                 rol     byte ptr [bp-25h], 1
seg001:109F                 jb      short loc_1F1FA
seg001:10A1                 lodsb
seg001:10A2                 mov     [bp-26h], al
seg001:10A5                 and     ax, 0Fh
seg001:10A8                 jmp     short loc_1F201
seg001:10AA ; ---------------------------------------------------------------------------
seg001:10AA
seg001:10AA loc_1F1FA:                              ; CODE XREF: sub_1F0B9+136j
seg001:10AA                 mov     al, [bp-26h]
seg001:10AD                 shr     al, 4
seg001:10B0                 cbw
seg001:10B1
seg001:10B1 loc_1F201:                              ; CODE XREF: sub_1F0B9+13Fj
seg001:10B1                 add     ax, 1
seg001:10B4                 sub     [bp-0Ch], ax
seg001:10B7                 inc     ax
seg001:10B8                 xchg    ax, cx
seg001:10B9
seg001:10B9 loc_1F209:                              ; CODE XREF: sub_1F0B9+11Cj
seg001:10B9                 test    bx, bx
seg001:10BB                 jz      short loc_1F220
seg001:10BD                 js      short loc_1F212
seg001:10BF                 mov     bx, [bp-1Ah]
seg001:10C2
seg001:10C2 loc_1F212:                              ; CODE XREF: sub_1F0B9+154j
seg001:10C2                                         ; sub_1F0B9+161j
seg001:10C2                 mov     ax, es:[bx+di]
seg001:10C5                 stosw
seg001:10C6                 mov     ax, es:[bx+di]
seg001:10C9                 stosw
seg001:10CA                 loop    loc_1F212
seg001:10CC                 pop     cx
seg001:10CD                 jmp     loc_1F128
seg001:10D0 ; ---------------------------------------------------------------------------
seg001:10D0
seg001:10D0 loc_1F220:                              ; CODE XREF: sub_1F0B9+152j
seg001:10D0                 shl     cx, 2
seg001:10D3                 add     di, cx
seg001:10D5                 pop     cx
seg001:10D6                 jmp     loc_1F128
seg001:10D6 sub_1F0B9       endp
seg001:10D6
seg001:10D9
seg001:10D9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:10D9
seg001:10D9
seg001:10D9 sub_1F229       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:10D9                                         ; sub_1F395+17p
seg001:10D9                                         ; DATA XREF: ...
seg001:10D9                 mov     bx, [bp-1Ah]
seg001:10DC                 mov     ax, es:[bx+di]
seg001:10DF                 stosw
seg001:10E0                 mov     ax, es:[bx+di]
seg001:10E3                 stosw
seg001:10E4                 retn
seg001:10E4 sub_1F229       endp
seg001:10E4
seg001:10E5
seg001:10E5 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:10E5
seg001:10E5
seg001:10E5 sub_1F235       proc near               ; CODE XREF: sub_1F395+17p
seg001:10E5                                         ; DATA XREF: seg001:146Do
seg001:10E5                 push    cx
seg001:10E6                 lodsb
seg001:10E7                 mov     cl, al
seg001:10E9                 and     cl, 3Fh
seg001:10EC                 add     cx, 11h
seg001:10EF                 sub     [bp-0Ch], cx
seg001:10F2                 inc     cx
seg001:10F3                 and     al, 0C0h
seg001:10F5                 jz      short loc_1F24E
seg001:10F7                 shl     cx, 2
seg001:10FA                 add     di, cx
seg001:10FC                 pop     cx
seg001:10FD                 retn
seg001:10FE ; ---------------------------------------------------------------------------
seg001:10FE
seg001:10FE loc_1F24E:                              ; CODE XREF: sub_1F235+10j
seg001:10FE                 mov     bx, [bp-1Ah]
seg001:1101
seg001:1101 loc_1F251:                              ; CODE XREF: sub_1F235+24j
seg001:1101                 mov     ax, es:[bx+di]
seg001:1104                 stosw
seg001:1105                 mov     ax, es:[bx+di]
seg001:1108                 stosw
seg001:1109                 loop    loc_1F251
seg001:110B                 pop     cx
seg001:110C                 retn
seg001:110C sub_1F235       endp
seg001:110C
seg001:110D
seg001:110D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:110D
seg001:110D
seg001:110D sub_1F25D       proc near               ; CODE XREF: sub_1F395+17p
seg001:110D                                         ; DATA XREF: seg001:144Fo
seg001:110D                 push    cx
seg001:110E                 lodsb
seg001:110F                 mov     cl, al
seg001:1111                 and     cl, 3Fh
seg001:1114                 add     cx, 11h
seg001:1117                 sub     [bp-0Ch], cx
seg001:111A                 inc     cx
seg001:111B                 and     al, 0C0h
seg001:111D                 rol     al, 2
seg001:1120                 mov     bx, 1441h
seg001:1123                 xlat    byte ptr cs:[bx]
seg001:1125                 cbw
seg001:1126                 xchg    ax, bx
seg001:1127
seg001:1127 loc_1F277:                              ; CODE XREF: sub_1F25D+22j
seg001:1127                 mov     ax, es:[bx+di]
seg001:112A                 stosw
seg001:112B                 mov     ax, es:[bx+di]
seg001:112E                 stosw
seg001:112F                 loop    loc_1F277
seg001:1131                 pop     cx
seg001:1132                 retn
seg001:1132 sub_1F25D       endp
seg001:1132
seg001:1133
seg001:1133 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1133
seg001:1133
seg001:1133 sub_1F283       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:1133                                         ; sub_1F395+17p
seg001:1133                                         ; DATA XREF: ...
seg001:1133                 call    word ptr [bp-22h]
seg001:1136                 xchg    ax, bx
seg001:1137                 shr     bl, 1
seg001:1139                 sbb     al, al
seg001:113B                 shr     bl, 1
seg001:113D                 sbb     ah, ah
seg001:113F                 stosw
seg001:1140                 shr     bl, 1
seg001:1142                 sbb     al, al
seg001:1144                 shr     bl, 1
seg001:1146                 sbb     ah, ah
seg001:1148                 stosw
seg001:1149                 retn
seg001:1149 sub_1F283       endp
seg001:1149
seg001:114A
seg001:114A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:114A
seg001:114A
seg001:114A sub_1F29A       proc near               ; CODE XREF: sub_1F395+17p
seg001:114A                                         ; DATA XREF: seg001:1451o
seg001:114A                 movsb
seg001:114B                 mov     al, es:[bx+di]
seg001:114E                 stosb
seg001:114F                 mov     ax, es:[bx+di]
seg001:1152                 stosw
seg001:1153                 retn
seg001:1153 sub_1F29A       endp
seg001:1153
seg001:1154
seg001:1154 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1154
seg001:1154
seg001:1154 sub_1F2A4       proc near               ; CODE XREF: sub_1F395+17p
seg001:1154                                         ; DATA XREF: seg001:1453o
seg001:1154                 mov     al, es:[bx+di]
seg001:1157                 stosb
seg001:1158                 movsb
seg001:1159                 mov     ax, es:[bx+di]
seg001:115C                 stosw
seg001:115D                 retn
seg001:115D sub_1F2A4       endp
seg001:115D
seg001:115E
seg001:115E ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:115E
seg001:115E
seg001:115E sub_1F2AE       proc near               ; CODE XREF: sub_1F395+17p
seg001:115E                                         ; DATA XREF: seg001:1455o
seg001:115E                 movsw
seg001:115F                 mov     ax, es:[bx+di]
seg001:1162                 stosw
seg001:1163                 retn
seg001:1163 sub_1F2AE       endp
seg001:1163
seg001:1164
seg001:1164 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1164
seg001:1164
seg001:1164 sub_1F2B4       proc near               ; CODE XREF: sub_1F395+17p
seg001:1164                                         ; DATA XREF: seg001:1457o
seg001:1164                 mov     ax, es:[bx+di]
seg001:1167                 stosw
seg001:1168                 movsb
seg001:1169                 mov     al, es:[bx+di]
seg001:116C                 stosb
seg001:116D                 retn
seg001:116D sub_1F2B4       endp
seg001:116D
seg001:116E
seg001:116E ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:116E
seg001:116E
seg001:116E sub_1F2BE       proc near               ; CODE XREF: sub_1F395+17p
seg001:116E                                         ; DATA XREF: seg001:1459o
seg001:116E                 movsb
seg001:116F                 mov     al, es:[bx+di]
seg001:1172                 stosb
seg001:1173                 movsb
seg001:1174                 mov     al, es:[bx+di]
seg001:1177                 stosb
seg001:1178                 retn
seg001:1178 sub_1F2BE       endp
seg001:1178
seg001:1179
seg001:1179 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1179
seg001:1179
seg001:1179 sub_1F2C9       proc near               ; CODE XREF: sub_1F395+17p
seg001:1179                                         ; DATA XREF: seg001:145Bo
seg001:1179                 mov     al, es:[bx+di]
seg001:117C                 stosb
seg001:117D                 movsw
seg001:117E                 mov     al, es:[bx+di]
seg001:1181                 stosb
seg001:1182                 retn
seg001:1182 sub_1F2C9       endp
seg001:1182
seg001:1183
seg001:1183 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1183
seg001:1183
seg001:1183 sub_1F2D3       proc near               ; CODE XREF: sub_1F395+17p
seg001:1183                                         ; DATA XREF: seg001:145Do
seg001:1183                 movsw
seg001:1184                 movsb
seg001:1185                 mov     al, es:[bx+di]
seg001:1188                 stosb
seg001:1189                 retn
seg001:1189 sub_1F2D3       endp
seg001:1189
seg001:118A
seg001:118A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:118A
seg001:118A
seg001:118A sub_1F2DA       proc near               ; CODE XREF: sub_1F395+17p
seg001:118A                                         ; DATA XREF: seg001:145Fo
seg001:118A                 mov     ax, es:[bx+di]
seg001:118D                 stosw
seg001:118E                 mov     al, es:[bx+di]
seg001:1191                 stosb
seg001:1192                 movsb
seg001:1193                 retn
seg001:1193 sub_1F2DA       endp
seg001:1193
seg001:1194
seg001:1194 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1194
seg001:1194
seg001:1194 sub_1F2E4       proc near               ; CODE XREF: sub_1F395+17p
seg001:1194                                         ; DATA XREF: seg001:1461o
seg001:1194                 movsb
seg001:1195                 mov     ax, es:[bx+di]
seg001:1198                 stosw
seg001:1199                 movsb
seg001:119A                 retn
seg001:119A sub_1F2E4       endp
seg001:119A
seg001:119B
seg001:119B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:119B
seg001:119B
seg001:119B sub_1F2EB       proc near               ; CODE XREF: sub_1F395+17p
seg001:119B                                         ; DATA XREF: seg001:1463o
seg001:119B                 mov     al, es:[bx+di]
seg001:119E                 stosb
seg001:119F                 movsb
seg001:11A0                 mov     al, es:[bx+di]
seg001:11A3                 stosb
seg001:11A4                 movsb
seg001:11A5                 retn
seg001:11A5 sub_1F2EB       endp
seg001:11A5
seg001:11A6
seg001:11A6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11A6
seg001:11A6
seg001:11A6 sub_1F2F6       proc near               ; CODE XREF: sub_1F395+17p
seg001:11A6                                         ; DATA XREF: seg001:1465o
seg001:11A6                 movsw
seg001:11A7                 mov     al, es:[bx+di]
seg001:11AA                 stosb
seg001:11AB                 movsb
seg001:11AC                 retn
seg001:11AC sub_1F2F6       endp
seg001:11AC
seg001:11AD
seg001:11AD ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11AD
seg001:11AD
seg001:11AD sub_1F2FD       proc near               ; CODE XREF: sub_1F395+17p
seg001:11AD                                         ; DATA XREF: seg001:1467o
seg001:11AD                 mov     ax, es:[bx+di]
seg001:11B0                 stosw
seg001:11B1                 movsw
seg001:11B2                 retn
seg001:11B2 sub_1F2FD       endp
seg001:11B2
seg001:11B3
seg001:11B3 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11B3
seg001:11B3
seg001:11B3 sub_1F303       proc near               ; CODE XREF: sub_1F395+17p
seg001:11B3                                         ; DATA XREF: seg001:1469o
seg001:11B3                 movsb
seg001:11B4                 mov     al, es:[bx+di]
seg001:11B7                 stosb
seg001:11B8                 movsw
seg001:11B9                 retn
seg001:11B9 sub_1F303       endp
seg001:11B9
seg001:11BA
seg001:11BA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11BA
seg001:11BA
seg001:11BA sub_1F30A       proc near               ; CODE XREF: sub_1F395+17p
seg001:11BA                                         ; DATA XREF: seg001:146Bo
seg001:11BA                 mov     al, es:[bx+di]
seg001:11BD                 stosb
seg001:11BE                 movsb
seg001:11BF                 movsw
seg001:11C0                 retn
seg001:11C0 sub_1F30A       endp
seg001:11C0
seg001:11C1
seg001:11C1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11C1
seg001:11C1
seg001:11C1 sub_1F311       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11C1                                         ; sub_1F395+17p
seg001:11C1                                         ; DATA XREF: ...
seg001:11C1                 movsb
seg001:11C2                 add     di, 3
seg001:11C5                 retn
seg001:11C5 sub_1F311       endp
seg001:11C5
seg001:11C6
seg001:11C6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11C6
seg001:11C6
seg001:11C6 sub_1F316       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11C6                                         ; sub_1F395+17p
seg001:11C6                                         ; DATA XREF: ...
seg001:11C6                 inc     di
seg001:11C7                 movsb
seg001:11C8                 inc     di
seg001:11C9                 inc     di
seg001:11CA                 retn
seg001:11CA sub_1F316       endp
seg001:11CA
seg001:11CB
seg001:11CB ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11CB
seg001:11CB
seg001:11CB sub_1F31B       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11CB                                         ; sub_1F395+17p
seg001:11CB                                         ; DATA XREF: ...
seg001:11CB                 movsw
seg001:11CC                 inc     di
seg001:11CD                 inc     di
seg001:11CE                 retn
seg001:11CE sub_1F31B       endp
seg001:11CE
seg001:11CF
seg001:11CF ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11CF
seg001:11CF
seg001:11CF sub_1F31F       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11CF                                         ; sub_1F395+17p
seg001:11CF                                         ; DATA XREF: ...
seg001:11CF                 inc     di
seg001:11D0                 inc     di
seg001:11D1                 movsb
seg001:11D2                 inc     di
seg001:11D3                 retn
seg001:11D3 sub_1F31F       endp
seg001:11D3
seg001:11D4
seg001:11D4 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11D4
seg001:11D4
seg001:11D4 sub_1F324       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11D4                                         ; sub_1F395+17p
seg001:11D4                                         ; DATA XREF: ...
seg001:11D4                 movsb
seg001:11D5                 inc     di
seg001:11D6                 movsb
seg001:11D7                 inc     di
seg001:11D8                 retn
seg001:11D8 sub_1F324       endp
seg001:11D8
seg001:11D9
seg001:11D9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11D9
seg001:11D9
seg001:11D9 sub_1F329       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11D9                                         ; sub_1F395+17p
seg001:11D9                                         ; DATA XREF: ...
seg001:11D9                 inc     di
seg001:11DA                 movsw
seg001:11DB                 inc     di
seg001:11DC                 retn
seg001:11DC sub_1F329       endp
seg001:11DC
seg001:11DD
seg001:11DD ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11DD
seg001:11DD
seg001:11DD sub_1F32D       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11DD                                         ; sub_1F395+17p
seg001:11DD                                         ; DATA XREF: ...
seg001:11DD                 movsw
seg001:11DE                 movsb
seg001:11DF                 inc     di
seg001:11E0                 retn
seg001:11E0 sub_1F32D       endp
seg001:11E0
seg001:11E1
seg001:11E1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11E1
seg001:11E1
seg001:11E1 sub_1F331       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11E1                                         ; sub_1F395+17p
seg001:11E1                                         ; DATA XREF: ...
seg001:11E1                 add     di, 3
seg001:11E4                 movsb
seg001:11E5                 retn
seg001:11E5 sub_1F331       endp
seg001:11E5
seg001:11E6
seg001:11E6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11E6
seg001:11E6
seg001:11E6 sub_1F336       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11E6                                         ; sub_1F395+17p
seg001:11E6                                         ; DATA XREF: ...
seg001:11E6                 movsb
seg001:11E7                 inc     di
seg001:11E8                 inc     di
seg001:11E9                 movsb
seg001:11EA                 retn
seg001:11EA sub_1F336       endp
seg001:11EA
seg001:11EB
seg001:11EB ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11EB
seg001:11EB
seg001:11EB sub_1F33B       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11EB                                         ; sub_1F395+17p
seg001:11EB                                         ; DATA XREF: ...
seg001:11EB                 inc     di
seg001:11EC                 movsb
seg001:11ED                 inc     di
seg001:11EE                 movsb
seg001:11EF                 retn
seg001:11EF sub_1F33B       endp
seg001:11EF
seg001:11F0
seg001:11F0 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11F0
seg001:11F0
seg001:11F0 sub_1F340       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11F0                                         ; sub_1F395+17p
seg001:11F0                                         ; DATA XREF: ...
seg001:11F0                 movsw
seg001:11F1                 inc     di
seg001:11F2                 movsb
seg001:11F3                 retn
seg001:11F3 sub_1F340       endp
seg001:11F3
seg001:11F4
seg001:11F4 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11F4
seg001:11F4
seg001:11F4 sub_1F344       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11F4                                         ; sub_1F395+17p
seg001:11F4                                         ; DATA XREF: ...
seg001:11F4                 inc     di
seg001:11F5                 inc     di
seg001:11F6                 movsw
seg001:11F7                 retn
seg001:11F7 sub_1F344       endp
seg001:11F7
seg001:11F8
seg001:11F8 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11F8
seg001:11F8
seg001:11F8 sub_1F348       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11F8                                         ; sub_1F395+17p
seg001:11F8                                         ; DATA XREF: ...
seg001:11F8                 movsb
seg001:11F9                 inc     di
seg001:11FA                 movsw
seg001:11FB                 retn
seg001:11FB sub_1F348       endp
seg001:11FB
seg001:11FC
seg001:11FC ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:11FC
seg001:11FC
seg001:11FC sub_1F34C       proc near               ; CODE XREF: sub_1F0B9+9Ep
seg001:11FC                                         ; sub_1F395+17p
seg001:11FC                                         ; DATA XREF: ...
seg001:11FC                 inc     di
seg001:11FD                 movsb
seg001:11FE                 movsw
seg001:11FF                 retn
seg001:11FF sub_1F34C       endp
seg001:11FF
seg001:1200 ; ---------------------------------------------------------------------------
seg001:1200                 rol     byte ptr [bp-25h], 1
seg001:1203                 jb      short loc_1F35D
seg001:1205                 lodsb
seg001:1206                 mov     [bp-26h], al
seg001:1209                 and     ax, 0Fh
seg001:120C                 retn
seg001:120D ; ---------------------------------------------------------------------------
seg001:120D
seg001:120D loc_1F35D:                              ; CODE XREF: seg001:1203j
seg001:120D                 mov     al, [bp-26h]
seg001:1210                 shr     al, 4
seg001:1213                 cbw
seg001:1214                 retn
seg001:1215 ; ---------------------------------------------------------------------------
seg001:1215                 xor     ax, ax
seg001:1217                 shl     dx, 1
seg001:1219                 dec     cx
seg001:121A                 jnz     short loc_1F372
seg001:121C                 mov     dx, [si]
seg001:121E                 inc     si
seg001:121F                 inc     si
seg001:1220                 mov     cl, 10h
seg001:1222
seg001:1222 loc_1F372:                              ; CODE XREF: seg001:121Aj
seg001:1222                 rcl     al, 1
seg001:1224                 shl     dx, 1
seg001:1226                 dec     cx
seg001:1227                 jnz     short loc_1F37F
seg001:1229                 mov     dx, [si]
seg001:122B                 inc     si
seg001:122C                 inc     si
seg001:122D                 mov     cl, 10h
seg001:122F
seg001:122F loc_1F37F:                              ; CODE XREF: seg001:1227j
seg001:122F                 rcl     al, 1
seg001:1231                 shl     dx, 1
seg001:1233                 dec     cx
seg001:1234                 jnz     short loc_1F38C
seg001:1236                 mov     dx, [si]
seg001:1238                 inc     si
seg001:1239                 inc     si
seg001:123A                 mov     cl, 10h
seg001:123C
seg001:123C loc_1F38C:                              ; CODE XREF: seg001:1234j
seg001:123C                 rcl     al, 1
seg001:123E                 cmp     al, 7
seg001:1240                 jnz     short locret_1F394
seg001:1242                 mov     al, 0Fh
seg001:1244
seg001:1244 locret_1F394:                           ; CODE XREF: seg001:1240j
seg001:1244                 retn
seg001:1245
seg001:1245 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1245
seg001:1245
seg001:1245 sub_1F395       proc near               ; CODE XREF: sub_1F0B9+74p
seg001:1245                 push    si
seg001:1246                 push    di
seg001:1247                 push    ds
seg001:1248                 push    es
seg001:1249                 push    bx
seg001:124A                 push    dx
seg001:124B                 push    cx
seg001:124C                 push    cs
seg001:124D                 pop     ds
seg001:124E                 assume ds:seg001
seg001:124E                 mov     ax, 0A000h
seg001:1251                 mov     es, ax
seg001:1253                 mov     si, [bp-1Ch]
seg001:1256                 mov     bx, word_1ED4D
seg001:125A                 shl     bx, 1
seg001:125C                 call    off_1F597[bx]
seg001:1260                 mov     ax, [bp-1Ah]
seg001:1263                 add     [bp-1Ch], ax
seg001:1266                 neg     word ptr [bp-1Ah]
seg001:1269                 pop     cx
seg001:126A                 pop     dx
seg001:126B                 pop     bx
seg001:126C                 pop     es
seg001:126D                 assume es:nothing
seg001:126D                 pop     ds
seg001:126E                 assume ds:dseg
seg001:126E                 pop     di
seg001:126F                 pop     si
seg001:1270                 test    si, si
seg001:1272                 jns     short locret_1F3CF
seg001:1274                 sub     si, 8000h
seg001:1278                 mov     ax, ds
seg001:127A                 add     ax, 800h
seg001:127D                 mov     ds, ax
seg001:127F                 assume ds:nothing
seg001:127F
seg001:127F locret_1F3CF:                           ; CODE XREF: sub_1F395+2Dj
seg001:127F                 retn
seg001:127F sub_1F395       endp
seg001:127F
seg001:1280
seg001:1280 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1280
seg001:1280
seg001:1280 sub_1F3D0       proc near               ; CODE XREF: sub_1F395+17p
seg001:1280                                         ; DATA XREF: seg001:144Bo
seg001:1280                 test    word ptr [bp-2], 1
seg001:1285                 jnz     short locret_1F3FB
seg001:1285 sub_1F3D0       endp
seg001:1285
seg001:1287
seg001:1287 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1287
seg001:1287
seg001:1287 sub_1F3D7       proc near               ; CODE XREF: sub_1F395+17p
seg001:1287                                         ; DATA XREF: seg001:off_1F597o ...
seg001:1287                 test    word ptr [bp-20h], 8
seg001:128C                 jnz     short loc_1F3FC
seg001:128E                 mov     dx, 3C4h
seg001:1291                 mov     al, 2
seg001:1293                 out     dx, al          ; EGA: sequencer address reg
seg001:1293                                         ; map mask: data bits 0-3 enable writes to bit planes 0-3
seg001:1294                 inc     dx
seg001:1295                 mov     al, 1
seg001:1297
seg001:1297 loc_1F3E7:                              ; CODE XREF: sub_1F3D7+1Bj
seg001:1297                 out     dx, al          ; EGA port: sequencer data register
seg001:1298                 mov     di, [bp-6]
seg001:129B                 call    sub_1F495
seg001:129E                 shl     al, 1
seg001:12A0                 cmp     al, 10h
seg001:12A2                 jb      short loc_1F3E7
seg001:12A4                 mov     al, 0Fh
seg001:12A6                 out     dx, al
seg001:12A7                 add     word ptr [bp-6], 50h ; 'P'
seg001:12AB
seg001:12AB locret_1F3FB:                           ; CODE XREF: sub_1F3D0+5j
seg001:12AB                 retn
seg001:12AC ; ---------------------------------------------------------------------------
seg001:12AC
seg001:12AC loc_1F3FC:                              ; CODE XREF: sub_1F3D7+5j
seg001:12AC                 les     dx, [bp-0Ah]
seg001:12AF                 mov     bx, [bp-14h]
seg001:12B2                 dec     bx
seg001:12B3                 mov     cx, [bp-0Eh]
seg001:12B6
seg001:12B6 loc_1F406:                              ; CODE XREF: sub_1F3D7+3Ej
seg001:12B6                 mov     di, dx
seg001:12B8                 movsb
seg001:12B9                 add     di, bx
seg001:12BB                 movsb
seg001:12BC                 add     di, bx
seg001:12BE                 movsb
seg001:12BF                 add     di, bx
seg001:12C1                 movsb
seg001:12C2                 add     di, bx
seg001:12C4                 inc     dx
seg001:12C5                 loop    loc_1F406
seg001:12C7                 inc     bx
seg001:12C8                 shl     bx, 2
seg001:12CB                 add     [bp-0Ah], bx
seg001:12CE                 jns     short locret_1F42A
seg001:12D0                 sub     word ptr [bp-0Ah], 8000h
seg001:12D5                 add     word ptr [bp-8], 800h
seg001:12DA
seg001:12DA locret_1F42A:                           ; CODE XREF: sub_1F3D7+47j
seg001:12DA                 retn
seg001:12DA sub_1F3D7       endp
seg001:12DA
seg001:12DB
seg001:12DB ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:12DB
seg001:12DB
seg001:12DB sub_1F42B       proc near               ; CODE XREF: sub_1F395+17p
seg001:12DB                                         ; DATA XREF: seg001:144Do
seg001:12DB                 test    word ptr [bp-2], 1
seg001:12E0                 jnz     short locret_1F45D
seg001:12E2                 test    word ptr [bp-20h], 8
seg001:12E7                 jnz     short loc_1F445
seg001:12E9                 mov     di, [bp-6]
seg001:12EC                 call    sub_1F45E
seg001:12EF                 add     word ptr [bp-6], 140h
seg001:12F4                 retn
seg001:12F5 ; ---------------------------------------------------------------------------
seg001:12F5
seg001:12F5 loc_1F445:                              ; CODE XREF: sub_1F42B+Cj
seg001:12F5                 les     di, [bp-0Ah]
seg001:12F8                 call    sub_1F45E
seg001:12FB                 mov     bx, [bp-14h]
seg001:12FE                 add     [bp-0Ah], bx
seg001:1301                 jns     short locret_1F45D
seg001:1303                 sub     word ptr [bp-0Ah], 8000h
seg001:1308                 add     word ptr [bp-8], 800h
seg001:130D
seg001:130D locret_1F45D:                           ; CODE XREF: sub_1F42B+5j
seg001:130D                                         ; sub_1F42B+26j
seg001:130D                 retn
seg001:130D sub_1F42B       endp
seg001:130D
seg001:130E
seg001:130E ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:130E
seg001:130E
seg001:130E sub_1F45E       proc near               ; CODE XREF: sub_1F42B+11p
seg001:130E                                         ; sub_1F42B+1Dp
seg001:130E                 push    bp
seg001:130F                 mov     bp, [bp-0Eh]
seg001:1312
seg001:1312 loc_1F462:                              ; CODE XREF: sub_1F45E+33j
seg001:1312                 lodsw
seg001:1313                 mov     dx, ax
seg001:1315                 lodsw
seg001:1316                 mov     bx, ax
seg001:1318                 mov     cx, 4
seg001:131B                 xor     ax, ax
seg001:131D
seg001:131D loc_1F46D:                              ; CODE XREF: sub_1F45E+30j
seg001:131D                 shl     bh, 1
seg001:131F                 rcl     al, 1
seg001:1321                 shl     bl, 1
seg001:1323                 rcl     al, 1
seg001:1325                 shl     dh, 1
seg001:1327                 rcl     al, 1
seg001:1329                 shl     dl, 1
seg001:132B                 rcl     al, 1
seg001:132D                 shl     bh, 1
seg001:132F                 rcl     al, 1
seg001:1331                 shl     bl, 1
seg001:1333                 rcl     al, 1
seg001:1335                 shl     dh, 1
seg001:1337                 rcl     al, 1
seg001:1339                 shl     dl, 1
seg001:133B                 rcl     al, 1
seg001:133D                 stosb
seg001:133E                 loop    loc_1F46D
seg001:1340                 dec     bp
seg001:1341                 jnz     short loc_1F462
seg001:1343                 pop     bp
seg001:1344                 retn
seg001:1344 sub_1F45E       endp
seg001:1344
seg001:1345
seg001:1345 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:1345
seg001:1345
seg001:1345 sub_1F495       proc near               ; CODE XREF: sub_1F3D7+14p
seg001:1345                 mov     cx, 3
seg001:1348                 push    si
seg001:1349                 call    sub_1F49F
seg001:134C                 pop     si
seg001:134D                 inc     si
seg001:134E                 retn
seg001:134E sub_1F495       endp
seg001:134E
seg001:134F
seg001:134F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg001:134F
seg001:134F
seg001:134F sub_1F49F       proc near               ; CODE XREF: sub_1F495+4p
seg001:134F                 movsb
seg001:1350                 add     si, cx
seg001:1352                 movsb
seg001:1353                 add     si, cx
seg001:1355                 movsb
seg001:1356                 add     si, cx
seg001:1358                 movsb
seg001:1359                 add     si, cx
seg001:135B                 movsb
seg001:135C                 add     si, cx
seg001:135E                 movsb
seg001:135F                 add     si, cx
seg001:1361                 movsb
seg001:1362                 add     si, cx
seg001:1364                 movsb
seg001:1365                 add     si, cx
seg001:1367                 movsb
seg001:1368                 add     si, cx
seg001:136A                 movsb
seg001:136B                 add     si, cx
seg001:136D                 movsb
seg001:136E                 add     si, cx
seg001:1370                 movsb
seg001:1371                 add     si, cx
seg001:1373                 movsb
seg001:1374                 add     si, cx
seg001:1376                 movsb
seg001:1377                 add     si, cx
seg001:1379                 movsb
seg001:137A                 add     si, cx
seg001:137C                 movsb
seg001:137D                 add     si, cx
seg001:137F                 movsb
seg001:1380                 add     si, cx
seg001:1382                 movsb
seg001:1383                 add     si, cx
seg001:1385                 movsb
seg001:1386                 add     si, cx
seg001:1388                 movsb
seg001:1389                 add     si, cx
seg001:138B                 movsb
seg001:138C                 add     si, cx
seg001:138E                 movsb
seg001:138F                 add     si, cx
seg001:1391                 movsb
seg001:1392                 add     si, cx
seg001:1394                 movsb
seg001:1395                 add     si, cx
seg001:1397                 movsb
seg001:1398                 add     si, cx
seg001:139A                 movsb
seg001:139B                 add     si, cx
seg001:139D                 movsb
seg001:139E                 add     si, cx
seg001:13A0                 movsb
seg001:13A1                 add     si, cx
seg001:13A3                 movsb
seg001:13A4                 add     si, cx
seg001:13A6                 movsb
seg001:13A7                 add     si, cx
seg001:13A9                 movsb
seg001:13AA                 add     si, cx
seg001:13AC                 movsb
seg001:13AD                 add     si, cx
seg001:13AF                 movsb
seg001:13B0                 add     si, cx
seg001:13B2                 movsb
seg001:13B3                 add     si, cx
seg001:13B5                 movsb
seg001:13B6                 add     si, cx
seg001:13B8                 movsb
seg001:13B9                 add     si, cx
seg001:13BB                 movsb
seg001:13BC                 add     si, cx
seg001:13BE                 movsb
seg001:13BF                 add     si, cx
seg001:13C1                 movsb
seg001:13C2                 add     si, cx
seg001:13C4                 movsb
seg001:13C5                 add     si, cx
seg001:13C7                 movsb
seg001:13C8                 add     si, cx
seg001:13CA                 movsb
seg001:13CB                 add     si, cx
seg001:13CD                 movsb
seg001:13CE                 add     si, cx
seg001:13D0                 movsb
seg001:13D1                 add     si, cx
seg001:13D3                 movsb
seg001:13D4                 add     si, cx
seg001:13D6                 movsb
seg001:13D7                 add     si, cx
seg001:13D9                 movsb
seg001:13DA                 add     si, cx
seg001:13DC                 movsb
seg001:13DD                 add     si, cx
seg001:13DF                 movsb
seg001:13E0                 add     si, cx
seg001:13E2                 movsb
seg001:13E3                 add     si, cx
seg001:13E5                 movsb
seg001:13E6                 add     si, cx
seg001:13E8                 movsb
seg001:13E9                 add     si, cx
seg001:13EB                 movsb
seg001:13EC                 add     si, cx
seg001:13EE                 movsb
seg001:13EF                 add     si, cx
seg001:13F1                 movsb
seg001:13F2                 add     si, cx
seg001:13F4                 movsb
seg001:13F5                 add     si, cx
seg001:13F7                 movsb
seg001:13F8                 add     si, cx
seg001:13FA                 movsb
seg001:13FB                 add     si, cx
seg001:13FD                 movsb
seg001:13FE                 add     si, cx
seg001:1400                 movsb
seg001:1401                 add     si, cx
seg001:1403                 movsb
seg001:1404                 add     si, cx
seg001:1406                 movsb
seg001:1407                 add     si, cx
seg001:1409                 movsb
seg001:140A                 add     si, cx
seg001:140C                 movsb
seg001:140D                 add     si, cx
seg001:140F                 movsb
seg001:1410                 add     si, cx
seg001:1412                 movsb
seg001:1413                 add     si, cx
seg001:1415                 movsb
seg001:1416                 add     si, cx
seg001:1418                 movsb
seg001:1419                 add     si, cx
seg001:141B                 movsb
seg001:141C                 add     si, cx
seg001:141E                 movsb
seg001:141F                 add     si, cx
seg001:1421                 movsb
seg001:1422                 add     si, cx
seg001:1424                 movsb
seg001:1425                 add     si, cx
seg001:1427                 movsb
seg001:1428                 add     si, cx
seg001:142A                 movsb
seg001:142B                 add     si, cx
seg001:142D                 movsb
seg001:142E                 add     si, cx
seg001:1430                 movsb
seg001:1431                 add     si, cx
seg001:1433                 movsb
seg001:1434                 add     si, cx
seg001:1436                 movsb
seg001:1437                 add     si, cx
seg001:1439                 movsb
seg001:143A                 add     si, cx
seg001:143C                 movsb
seg001:143D                 add     si, cx
seg001:143F                 retn
seg001:143F sub_1F49F       endp
seg001:143F
seg001:143F ; ---------------------------------------------------------------------------
seg001:1440                 db 90h, 0FCh, 0F8h, 0F0h, 0E0h, 1, 0
seg001:1447 off_1F597       dw offset sub_1F3D7     ; DATA XREF: sub_1F395+17r
seg001:1449                 dw offset sub_1F3D7
seg001:144B                 dw offset sub_1F3D0
seg001:144D                 dw offset sub_1F42B
seg001:144F                 dw offset sub_1F25D
seg001:1451                 dw offset sub_1F29A
seg001:1453                 dw offset sub_1F2A4
seg001:1455                 dw offset sub_1F2AE
seg001:1457                 dw offset sub_1F2B4
seg001:1459                 dw offset sub_1F2BE
seg001:145B                 dw offset sub_1F2C9
seg001:145D                 dw offset sub_1F2D3
seg001:145F                 dw offset sub_1F2DA
seg001:1461                 dw offset sub_1F2E4
seg001:1463                 dw offset sub_1F2EB
seg001:1465                 dw offset sub_1F2F6
seg001:1467                 dw offset sub_1F2FD
seg001:1469                 dw offset sub_1F303
seg001:146B                 dw offset sub_1F30A
seg001:146D                 dw offset sub_1F235
seg001:146F off_1F5BF       dw offset sub_1F283     ; DATA XREF: sub_1F0B9+9Er
seg001:1471                 dw offset sub_1F311
seg001:1473                 dw offset sub_1F316
seg001:1475                 dw offset sub_1F31B
seg001:1477                 dw offset sub_1F31F
seg001:1479                 dw offset sub_1F324
seg001:147B                 dw offset sub_1F329
seg001:147D                 dw offset sub_1F32D
seg001:147F                 dw offset sub_1F331
seg001:1481                 dw offset sub_1F336
seg001:1483                 dw offset sub_1F33B
seg001:1485                 dw offset sub_1F340
seg001:1487                 dw offset sub_1F344
seg001:1489                 dw offset sub_1F348
seg001:148B                 dw offset sub_1F34C
seg001:148D                 dw offset sub_1F229
seg001:148F                 align 2
seg001:148F seg001          ends
seg001:148F


*/